{"ast":null,"code":"function getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth) {\n  const sumTabWidths = tabWidths.reduce((sum, width) => sum + width, 0);\n  const arrayOfTabIndices = tabs.map((_, index) => {\n    return index;\n  });\n  const visibleTabs = [];\n  const hiddenTabs = [];\n\n  if (containerWidth > sumTabWidths) {\n    visibleTabs.push(...arrayOfTabIndices);\n  } else {\n    visibleTabs.push(selected);\n    let tabListWidth = tabWidths[selected];\n    arrayOfTabIndices.forEach(currentTabIndex => {\n      if (currentTabIndex !== selected) {\n        const currentTabWidth = tabWidths[currentTabIndex];\n\n        if (tabListWidth + currentTabWidth >= containerWidth - disclosureWidth) {\n          hiddenTabs.push(currentTabIndex);\n          return;\n        }\n\n        visibleTabs.push(currentTabIndex);\n        tabListWidth += currentTabWidth;\n      }\n    });\n  }\n\n  return {\n    visibleTabs,\n    hiddenTabs\n  };\n}\n\nexport { getVisibleAndHiddenTabIndices };","map":{"version":3,"names":["getVisibleAndHiddenTabIndices","tabs","selected","disclosureWidth","tabWidths","containerWidth","sumTabWidths","reduce","sum","width","arrayOfTabIndices","map","_","index","visibleTabs","hiddenTabs","push","tabListWidth","forEach","currentTabIndex","currentTabWidth"],"sources":["/home/cedcoss/react/After interview/polarisdashoboard/node_modules/@shopify/polaris/build/esm/components/Tabs/utilities.js"],"sourcesContent":["function getVisibleAndHiddenTabIndices(tabs, selected, disclosureWidth, tabWidths, containerWidth) {\n  const sumTabWidths = tabWidths.reduce((sum, width) => sum + width, 0);\n  const arrayOfTabIndices = tabs.map((_, index) => {\n    return index;\n  });\n  const visibleTabs = [];\n  const hiddenTabs = [];\n\n  if (containerWidth > sumTabWidths) {\n    visibleTabs.push(...arrayOfTabIndices);\n  } else {\n    visibleTabs.push(selected);\n    let tabListWidth = tabWidths[selected];\n    arrayOfTabIndices.forEach(currentTabIndex => {\n      if (currentTabIndex !== selected) {\n        const currentTabWidth = tabWidths[currentTabIndex];\n\n        if (tabListWidth + currentTabWidth >= containerWidth - disclosureWidth) {\n          hiddenTabs.push(currentTabIndex);\n          return;\n        }\n\n        visibleTabs.push(currentTabIndex);\n        tabListWidth += currentTabWidth;\n      }\n    });\n  }\n\n  return {\n    visibleTabs,\n    hiddenTabs\n  };\n}\n\nexport { getVisibleAndHiddenTabIndices };\n"],"mappings":"AAAA,SAASA,6BAAT,CAAuCC,IAAvC,EAA6CC,QAA7C,EAAuDC,eAAvD,EAAwEC,SAAxE,EAAmFC,cAAnF,EAAmG;EACjG,MAAMC,YAAY,GAAGF,SAAS,CAACG,MAAV,CAAiB,CAACC,GAAD,EAAMC,KAAN,KAAgBD,GAAG,GAAGC,KAAvC,EAA8C,CAA9C,CAArB;EACA,MAAMC,iBAAiB,GAAGT,IAAI,CAACU,GAAL,CAAS,CAACC,CAAD,EAAIC,KAAJ,KAAc;IAC/C,OAAOA,KAAP;EACD,CAFyB,CAA1B;EAGA,MAAMC,WAAW,GAAG,EAApB;EACA,MAAMC,UAAU,GAAG,EAAnB;;EAEA,IAAIV,cAAc,GAAGC,YAArB,EAAmC;IACjCQ,WAAW,CAACE,IAAZ,CAAiB,GAAGN,iBAApB;EACD,CAFD,MAEO;IACLI,WAAW,CAACE,IAAZ,CAAiBd,QAAjB;IACA,IAAIe,YAAY,GAAGb,SAAS,CAACF,QAAD,CAA5B;IACAQ,iBAAiB,CAACQ,OAAlB,CAA0BC,eAAe,IAAI;MAC3C,IAAIA,eAAe,KAAKjB,QAAxB,EAAkC;QAChC,MAAMkB,eAAe,GAAGhB,SAAS,CAACe,eAAD,CAAjC;;QAEA,IAAIF,YAAY,GAAGG,eAAf,IAAkCf,cAAc,GAAGF,eAAvD,EAAwE;UACtEY,UAAU,CAACC,IAAX,CAAgBG,eAAhB;UACA;QACD;;QAEDL,WAAW,CAACE,IAAZ,CAAiBG,eAAjB;QACAF,YAAY,IAAIG,eAAhB;MACD;IACF,CAZD;EAaD;;EAED,OAAO;IACLN,WADK;IAELC;EAFK,CAAP;AAID;;AAED,SAASf,6BAAT"},"metadata":{},"sourceType":"module"}