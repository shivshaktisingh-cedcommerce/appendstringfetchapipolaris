{"ast":null,"code":"import React, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { debounce } from '../../../../utilities/debounce.js';\nimport styles from './Actions.scss.js';\nimport { MenuGroup } from '../MenuGroup/MenuGroup.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { SecondaryAction } from '../SecondaryAction/SecondaryAction.js';\nimport { EventListener } from '../../../EventListener/EventListener.js';\nimport { ButtonGroup } from '../../../ButtonGroup/ButtonGroup.js';\nconst ACTION_SPACING = 8;\n\nfunction Actions(_ref) {\n  let {\n    actions = [],\n    groups = [],\n    onActionRollup\n  } = _ref;\n  const i18n = useI18n();\n  const actionsLayoutRef = useRef(null);\n  const menuGroupWidthRef = useRef(0);\n  const availableWidthRef = useRef(0);\n  const actionsAndGroupsLengthRef = useRef(0);\n  const timesMeasured = useRef(0);\n  const actionWidthsRef = useRef([]);\n  const rollupActiveRef = useRef(null);\n  const [activeMenuGroup, setActiveMenuGroup] = useState(undefined);\n  const [measuredActions, setMeasuredActions] = useState({\n    showable: [],\n    rolledUp: []\n  });\n  const defaultRollupGroup = {\n    title: i18n.translate('Polaris.ActionMenu.Actions.moreActions'),\n    actions: []\n  };\n  const lastMenuGroup = [...groups].pop();\n  const lastMenuGroupWidth = [...actionWidthsRef.current].pop() || 0;\n  const handleActionsOffsetWidth = useCallback(width => {\n    actionWidthsRef.current = [...actionWidthsRef.current, width];\n  }, []);\n  const handleMenuGroupToggle = useCallback(group => setActiveMenuGroup(activeMenuGroup ? undefined : group), [activeMenuGroup]);\n  const handleMenuGroupClose = useCallback(() => setActiveMenuGroup(undefined), []);\n  const updateActions = useCallback(() => {\n    let actionsAndGroups = [...actions, ...groups];\n\n    if (groups.length > 0) {\n      // We don't want to include actions from the last group\n      // since it is always rendered with its own actions\n      actionsAndGroups = [...actionsAndGroups].slice(0, actionsAndGroups.length - 1);\n    }\n\n    const showable = actionsAndGroups.slice(0, measuredActions.showable.length);\n    const rolledUp = actionsAndGroups.slice(measuredActions.showable.length, actionsAndGroups.length);\n    setMeasuredActions({\n      showable,\n      rolledUp\n    });\n  }, [actions, groups, measuredActions.showable.length]);\n  const measureActions = useCallback(() => {\n    if (actionWidthsRef.current.length === 0 || availableWidthRef.current === 0) {\n      return;\n    }\n\n    const actionsAndGroups = [...actions, ...groups];\n\n    if (actionsAndGroups.length === 1) {\n      setMeasuredActions({\n        showable: actionsAndGroups,\n        rolledUp: []\n      });\n      return;\n    }\n\n    let currentAvailableWidth = availableWidthRef.current;\n    let newShowableActions = [];\n    let newRolledUpActions = [];\n    actionsAndGroups.forEach((action, index) => {\n      const canFitAction = actionWidthsRef.current[index] + menuGroupWidthRef.current + ACTION_SPACING + lastMenuGroupWidth <= currentAvailableWidth;\n\n      if (canFitAction) {\n        currentAvailableWidth -= actionWidthsRef.current[index] + ACTION_SPACING * 2;\n        newShowableActions = [...newShowableActions, action];\n      } else {\n        currentAvailableWidth = 0; // Find last group if it exists and always render it as a rolled up action below\n\n        if (action === lastMenuGroup) return;\n        newRolledUpActions = [...newRolledUpActions, action];\n      }\n    });\n\n    if (onActionRollup) {\n      // Note: Do not include last group actions since we are skipping `lastMenuGroup` above\n      // as it is always rendered with its own actions\n      const isRollupActive = newShowableActions.length < actionsAndGroups.length - 1;\n\n      if (rollupActiveRef.current !== isRollupActive) {\n        onActionRollup(isRollupActive);\n        rollupActiveRef.current = isRollupActive;\n      }\n    }\n\n    setMeasuredActions({\n      showable: newShowableActions,\n      rolledUp: newRolledUpActions\n    });\n    timesMeasured.current += 1;\n    actionsAndGroupsLengthRef.current = actionsAndGroups.length;\n  }, [actions, groups, lastMenuGroup, lastMenuGroupWidth, onActionRollup]);\n  const handleResize = useMemo(() => debounce(() => {\n    if (!actionsLayoutRef.current) return;\n    availableWidthRef.current = actionsLayoutRef.current.offsetWidth; // Set timesMeasured to 0 to allow re-measuring\n\n    timesMeasured.current = 0;\n    measureActions();\n  }, 50, {\n    leading: false,\n    trailing: true\n  }), [measureActions]);\n  useEffect(() => {\n    if (!actionsLayoutRef.current) {\n      return;\n    }\n\n    availableWidthRef.current = actionsLayoutRef.current.offsetWidth;\n\n    if ( // Allow measuring twice\n    // This accounts for the initial paint and re-flow\n    timesMeasured.current >= 2 && [...actions, ...groups].length === actionsAndGroupsLengthRef.current) {\n      updateActions();\n      return;\n    }\n\n    measureActions();\n  }, [actions, groups, measureActions, updateActions]);\n  const actionsMarkup = actions.map(action => {\n    if (measuredActions.showable.length > 0 || measuredActions.rolledUp.includes(action)) return null;\n    const {\n      content,\n      onAction,\n      ...rest\n    } = action;\n    return /*#__PURE__*/React.createElement(SecondaryAction, Object.assign({\n      key: content,\n      onClick: onAction\n    }, rest, {\n      getOffsetWidth: handleActionsOffsetWidth\n    }), content);\n  });\n  const rollUppableActionsMarkup = measuredActions.showable.length > 0 ? measuredActions.showable.map(action => action.content && /*#__PURE__*/React.createElement(SecondaryAction, Object.assign({\n    key: action.content\n  }, action, {\n    getOffsetWidth: handleActionsOffsetWidth\n  }), action.content)) : null;\n  const filteredGroups = [...groups, defaultRollupGroup].filter(group => {\n    return groups.length === 0 ? group : group === lastMenuGroup || !measuredActions.rolledUp.some(rolledUpGroup => isMenuGroup(rolledUpGroup) && rolledUpGroup.title === group.title);\n  });\n  const groupsMarkup = filteredGroups.map(group => {\n    const {\n      title,\n      actions: groupActions,\n      ...rest\n    } = group;\n    const isDefaultGroup = group === defaultRollupGroup;\n    const isLastMenuGroup = group === lastMenuGroup;\n    const [finalRolledUpActions, finalRolledUpSectionGroups] = measuredActions.rolledUp.reduce((_ref2, action) => {\n      let [actions, sections] = _ref2;\n\n      if (isMenuGroup(action)) {\n        sections.push({\n          title: action.title,\n          items: action.actions.map(sectionAction => ({ ...sectionAction,\n            disabled: action.disabled || sectionAction.disabled\n          }))\n        });\n      } else {\n        actions.push(action);\n      }\n\n      return [actions, sections];\n    }, [[], []]);\n\n    if (!isDefaultGroup && !isLastMenuGroup) {\n      // Render a normal MenuGroup with just its actions\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: groupActions\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    } else if (!isDefaultGroup && isLastMenuGroup) {\n      // render the last, rollup group with its actions and finalRolledUpActions\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: [...finalRolledUpActions, ...groupActions],\n        sections: finalRolledUpSectionGroups\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    } else if (isDefaultGroup && groups.length === 0 && finalRolledUpActions.length) {\n      // Render the default group to rollup into if one does not exist\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: finalRolledUpActions,\n        sections: finalRolledUpSectionGroups\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    }\n  });\n  const groupedActionsMarkup = /*#__PURE__*/React.createElement(ButtonGroup, {\n    spacing: \"extraTight\"\n  }, rollUppableActionsMarkup, actionsMarkup, groupsMarkup);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ActionsLayout,\n    ref: actionsLayoutRef\n  }, groupedActionsMarkup, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }));\n}\n\nfunction isMenuGroup(actionOrMenuGroup) {\n  return 'title' in actionOrMenuGroup;\n}\n\nexport { Actions };","map":{"version":3,"names":["React","useRef","useState","useCallback","useMemo","useEffect","debounce","styles","MenuGroup","useI18n","SecondaryAction","EventListener","ButtonGroup","ACTION_SPACING","Actions","actions","groups","onActionRollup","i18n","actionsLayoutRef","menuGroupWidthRef","availableWidthRef","actionsAndGroupsLengthRef","timesMeasured","actionWidthsRef","rollupActiveRef","activeMenuGroup","setActiveMenuGroup","undefined","measuredActions","setMeasuredActions","showable","rolledUp","defaultRollupGroup","title","translate","lastMenuGroup","pop","lastMenuGroupWidth","current","handleActionsOffsetWidth","width","handleMenuGroupToggle","group","handleMenuGroupClose","updateActions","actionsAndGroups","length","slice","measureActions","currentAvailableWidth","newShowableActions","newRolledUpActions","forEach","action","index","canFitAction","isRollupActive","handleResize","offsetWidth","leading","trailing","actionsMarkup","map","includes","content","onAction","rest","createElement","Object","assign","key","onClick","getOffsetWidth","rollUppableActionsMarkup","filteredGroups","filter","some","rolledUpGroup","isMenuGroup","groupsMarkup","groupActions","isDefaultGroup","isLastMenuGroup","finalRolledUpActions","finalRolledUpSectionGroups","reduce","sections","push","items","sectionAction","disabled","active","onOpen","onClose","groupedActionsMarkup","spacing","className","ActionsLayout","ref","event","handler","actionOrMenuGroup"],"sources":["/home/cedcoss/react/After interview/polarisdashoboard/node_modules/@shopify/polaris/build/esm/components/ActionMenu/components/Actions/Actions.js"],"sourcesContent":["import React, { useRef, useState, useCallback, useMemo, useEffect } from 'react';\nimport { debounce } from '../../../../utilities/debounce.js';\nimport styles from './Actions.scss.js';\nimport { MenuGroup } from '../MenuGroup/MenuGroup.js';\nimport { useI18n } from '../../../../utilities/i18n/hooks.js';\nimport { SecondaryAction } from '../SecondaryAction/SecondaryAction.js';\nimport { EventListener } from '../../../EventListener/EventListener.js';\nimport { ButtonGroup } from '../../../ButtonGroup/ButtonGroup.js';\n\nconst ACTION_SPACING = 8;\nfunction Actions({\n  actions = [],\n  groups = [],\n  onActionRollup\n}) {\n  const i18n = useI18n();\n  const actionsLayoutRef = useRef(null);\n  const menuGroupWidthRef = useRef(0);\n  const availableWidthRef = useRef(0);\n  const actionsAndGroupsLengthRef = useRef(0);\n  const timesMeasured = useRef(0);\n  const actionWidthsRef = useRef([]);\n  const rollupActiveRef = useRef(null);\n  const [activeMenuGroup, setActiveMenuGroup] = useState(undefined);\n  const [measuredActions, setMeasuredActions] = useState({\n    showable: [],\n    rolledUp: []\n  });\n  const defaultRollupGroup = {\n    title: i18n.translate('Polaris.ActionMenu.Actions.moreActions'),\n    actions: []\n  };\n  const lastMenuGroup = [...groups].pop();\n  const lastMenuGroupWidth = [...actionWidthsRef.current].pop() || 0;\n  const handleActionsOffsetWidth = useCallback(width => {\n    actionWidthsRef.current = [...actionWidthsRef.current, width];\n  }, []);\n  const handleMenuGroupToggle = useCallback(group => setActiveMenuGroup(activeMenuGroup ? undefined : group), [activeMenuGroup]);\n  const handleMenuGroupClose = useCallback(() => setActiveMenuGroup(undefined), []);\n  const updateActions = useCallback(() => {\n    let actionsAndGroups = [...actions, ...groups];\n\n    if (groups.length > 0) {\n      // We don't want to include actions from the last group\n      // since it is always rendered with its own actions\n      actionsAndGroups = [...actionsAndGroups].slice(0, actionsAndGroups.length - 1);\n    }\n\n    const showable = actionsAndGroups.slice(0, measuredActions.showable.length);\n    const rolledUp = actionsAndGroups.slice(measuredActions.showable.length, actionsAndGroups.length);\n    setMeasuredActions({\n      showable,\n      rolledUp\n    });\n  }, [actions, groups, measuredActions.showable.length]);\n  const measureActions = useCallback(() => {\n    if (actionWidthsRef.current.length === 0 || availableWidthRef.current === 0) {\n      return;\n    }\n\n    const actionsAndGroups = [...actions, ...groups];\n\n    if (actionsAndGroups.length === 1) {\n      setMeasuredActions({\n        showable: actionsAndGroups,\n        rolledUp: []\n      });\n      return;\n    }\n\n    let currentAvailableWidth = availableWidthRef.current;\n    let newShowableActions = [];\n    let newRolledUpActions = [];\n    actionsAndGroups.forEach((action, index) => {\n      const canFitAction = actionWidthsRef.current[index] + menuGroupWidthRef.current + ACTION_SPACING + lastMenuGroupWidth <= currentAvailableWidth;\n\n      if (canFitAction) {\n        currentAvailableWidth -= actionWidthsRef.current[index] + ACTION_SPACING * 2;\n        newShowableActions = [...newShowableActions, action];\n      } else {\n        currentAvailableWidth = 0; // Find last group if it exists and always render it as a rolled up action below\n\n        if (action === lastMenuGroup) return;\n        newRolledUpActions = [...newRolledUpActions, action];\n      }\n    });\n\n    if (onActionRollup) {\n      // Note: Do not include last group actions since we are skipping `lastMenuGroup` above\n      // as it is always rendered with its own actions\n      const isRollupActive = newShowableActions.length < actionsAndGroups.length - 1;\n\n      if (rollupActiveRef.current !== isRollupActive) {\n        onActionRollup(isRollupActive);\n        rollupActiveRef.current = isRollupActive;\n      }\n    }\n\n    setMeasuredActions({\n      showable: newShowableActions,\n      rolledUp: newRolledUpActions\n    });\n    timesMeasured.current += 1;\n    actionsAndGroupsLengthRef.current = actionsAndGroups.length;\n  }, [actions, groups, lastMenuGroup, lastMenuGroupWidth, onActionRollup]);\n  const handleResize = useMemo(() => debounce(() => {\n    if (!actionsLayoutRef.current) return;\n    availableWidthRef.current = actionsLayoutRef.current.offsetWidth; // Set timesMeasured to 0 to allow re-measuring\n\n    timesMeasured.current = 0;\n    measureActions();\n  }, 50, {\n    leading: false,\n    trailing: true\n  }), [measureActions]);\n  useEffect(() => {\n    if (!actionsLayoutRef.current) {\n      return;\n    }\n\n    availableWidthRef.current = actionsLayoutRef.current.offsetWidth;\n\n    if ( // Allow measuring twice\n    // This accounts for the initial paint and re-flow\n    timesMeasured.current >= 2 && [...actions, ...groups].length === actionsAndGroupsLengthRef.current) {\n      updateActions();\n      return;\n    }\n\n    measureActions();\n  }, [actions, groups, measureActions, updateActions]);\n  const actionsMarkup = actions.map(action => {\n    if (measuredActions.showable.length > 0 || measuredActions.rolledUp.includes(action)) return null;\n    const {\n      content,\n      onAction,\n      ...rest\n    } = action;\n    return /*#__PURE__*/React.createElement(SecondaryAction, Object.assign({\n      key: content,\n      onClick: onAction\n    }, rest, {\n      getOffsetWidth: handleActionsOffsetWidth\n    }), content);\n  });\n  const rollUppableActionsMarkup = measuredActions.showable.length > 0 ? measuredActions.showable.map(action => action.content && /*#__PURE__*/React.createElement(SecondaryAction, Object.assign({\n    key: action.content\n  }, action, {\n    getOffsetWidth: handleActionsOffsetWidth\n  }), action.content)) : null;\n  const filteredGroups = [...groups, defaultRollupGroup].filter(group => {\n    return groups.length === 0 ? group : group === lastMenuGroup || !measuredActions.rolledUp.some(rolledUpGroup => isMenuGroup(rolledUpGroup) && rolledUpGroup.title === group.title);\n  });\n  const groupsMarkup = filteredGroups.map(group => {\n    const {\n      title,\n      actions: groupActions,\n      ...rest\n    } = group;\n    const isDefaultGroup = group === defaultRollupGroup;\n    const isLastMenuGroup = group === lastMenuGroup;\n    const [finalRolledUpActions, finalRolledUpSectionGroups] = measuredActions.rolledUp.reduce(([actions, sections], action) => {\n      if (isMenuGroup(action)) {\n        sections.push({\n          title: action.title,\n          items: action.actions.map(sectionAction => ({ ...sectionAction,\n            disabled: action.disabled || sectionAction.disabled\n          }))\n        });\n      } else {\n        actions.push(action);\n      }\n\n      return [actions, sections];\n    }, [[], []]);\n\n    if (!isDefaultGroup && !isLastMenuGroup) {\n      // Render a normal MenuGroup with just its actions\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: groupActions\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    } else if (!isDefaultGroup && isLastMenuGroup) {\n      // render the last, rollup group with its actions and finalRolledUpActions\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: [...finalRolledUpActions, ...groupActions],\n        sections: finalRolledUpSectionGroups\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    } else if (isDefaultGroup && groups.length === 0 && finalRolledUpActions.length) {\n      // Render the default group to rollup into if one does not exist\n      return /*#__PURE__*/React.createElement(MenuGroup, Object.assign({\n        key: title,\n        title: title,\n        active: title === activeMenuGroup,\n        actions: finalRolledUpActions,\n        sections: finalRolledUpSectionGroups\n      }, rest, {\n        onOpen: handleMenuGroupToggle,\n        onClose: handleMenuGroupClose,\n        getOffsetWidth: handleActionsOffsetWidth\n      }));\n    }\n  });\n  const groupedActionsMarkup = /*#__PURE__*/React.createElement(ButtonGroup, {\n    spacing: \"extraTight\"\n  }, rollUppableActionsMarkup, actionsMarkup, groupsMarkup);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.ActionsLayout,\n    ref: actionsLayoutRef\n  }, groupedActionsMarkup, /*#__PURE__*/React.createElement(EventListener, {\n    event: \"resize\",\n    handler: handleResize\n  }));\n}\n\nfunction isMenuGroup(actionOrMenuGroup) {\n  return 'title' in actionOrMenuGroup;\n}\n\nexport { Actions };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}