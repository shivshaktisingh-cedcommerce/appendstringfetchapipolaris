{"ast":null,"code":"import React, { useRef, useContext, useEffect } from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './CheckableButton.scss.js';\nimport { ResourceListContext } from '../../utilities/resource-list/context.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\n\nfunction CheckableButton(_ref) {\n  let {\n    accessibilityLabel,\n    label = '',\n    onToggleAll,\n    selected,\n    selectMode,\n    plain,\n    measuring,\n    disabled,\n    smallScreen\n  } = _ref;\n  const checkBoxRef = useRef(null);\n  const {\n    registerCheckableButtons\n  } = useContext(ResourceListContext);\n  let currentKey = 'bulkLg';\n\n  if (plain) {\n    currentKey = 'plain';\n  } else if (smallScreen) {\n    currentKey = 'bulkSm';\n  }\n\n  useEffect(() => {\n    if (checkBoxRef.current && registerCheckableButtons) {\n      registerCheckableButtons(currentKey, checkBoxRef.current);\n    }\n  }, [currentKey, registerCheckableButtons]);\n  const className = plain ? classNames(styles.CheckableButton, styles['CheckableButton-plain']) : classNames(styles.CheckableButton, selectMode && styles['CheckableButton-selectMode'], selected && styles['CheckableButton-selected'], measuring && styles['CheckableButton-measuring']);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    onClick: onToggleAll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: accessibilityLabel,\n    labelHidden: true,\n    checked: selected,\n    disabled: disabled,\n    onChange: onToggleAll,\n    ref: checkBoxRef\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Label\n  }, label));\n}\n\nexport { CheckableButton };","map":{"version":3,"names":["React","useRef","useContext","useEffect","classNames","styles","ResourceListContext","Checkbox","CheckableButton","accessibilityLabel","label","onToggleAll","selected","selectMode","plain","measuring","disabled","smallScreen","checkBoxRef","registerCheckableButtons","currentKey","current","className","createElement","onClick","labelHidden","checked","onChange","ref","Label"],"sources":["/home/cedcoss/react/After interview/polarisdashoboard/node_modules/@shopify/polaris/build/esm/components/CheckableButton/CheckableButton.js"],"sourcesContent":["import React, { useRef, useContext, useEffect } from 'react';\nimport { classNames } from '../../utilities/css.js';\nimport styles from './CheckableButton.scss.js';\nimport { ResourceListContext } from '../../utilities/resource-list/context.js';\nimport { Checkbox } from '../Checkbox/Checkbox.js';\n\nfunction CheckableButton({\n  accessibilityLabel,\n  label = '',\n  onToggleAll,\n  selected,\n  selectMode,\n  plain,\n  measuring,\n  disabled,\n  smallScreen\n}) {\n  const checkBoxRef = useRef(null);\n  const {\n    registerCheckableButtons\n  } = useContext(ResourceListContext);\n  let currentKey = 'bulkLg';\n\n  if (plain) {\n    currentKey = 'plain';\n  } else if (smallScreen) {\n    currentKey = 'bulkSm';\n  }\n\n  useEffect(() => {\n    if (checkBoxRef.current && registerCheckableButtons) {\n      registerCheckableButtons(currentKey, checkBoxRef.current);\n    }\n  }, [currentKey, registerCheckableButtons]);\n  const className = plain ? classNames(styles.CheckableButton, styles['CheckableButton-plain']) : classNames(styles.CheckableButton, selectMode && styles['CheckableButton-selectMode'], selected && styles['CheckableButton-selected'], measuring && styles['CheckableButton-measuring']);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    onClick: onToggleAll\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.Checkbox\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    label: accessibilityLabel,\n    labelHidden: true,\n    checked: selected,\n    disabled: disabled,\n    onChange: onToggleAll,\n    ref: checkBoxRef\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Label\n  }, label));\n}\n\nexport { CheckableButton };\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,mBAAT,QAAoC,0CAApC;AACA,SAASC,QAAT,QAAyB,yBAAzB;;AAEA,SAASC,eAAT,OAUG;EAAA,IAVsB;IACvBC,kBADuB;IAEvBC,KAAK,GAAG,EAFe;IAGvBC,WAHuB;IAIvBC,QAJuB;IAKvBC,UALuB;IAMvBC,KANuB;IAOvBC,SAPuB;IAQvBC,QARuB;IASvBC;EATuB,CAUtB;EACD,MAAMC,WAAW,GAAGjB,MAAM,CAAC,IAAD,CAA1B;EACA,MAAM;IACJkB;EADI,IAEFjB,UAAU,CAACI,mBAAD,CAFd;EAGA,IAAIc,UAAU,GAAG,QAAjB;;EAEA,IAAIN,KAAJ,EAAW;IACTM,UAAU,GAAG,OAAb;EACD,CAFD,MAEO,IAAIH,WAAJ,EAAiB;IACtBG,UAAU,GAAG,QAAb;EACD;;EAEDjB,SAAS,CAAC,MAAM;IACd,IAAIe,WAAW,CAACG,OAAZ,IAAuBF,wBAA3B,EAAqD;MACnDA,wBAAwB,CAACC,UAAD,EAAaF,WAAW,CAACG,OAAzB,CAAxB;IACD;EACF,CAJQ,EAIN,CAACD,UAAD,EAAaD,wBAAb,CAJM,CAAT;EAKA,MAAMG,SAAS,GAAGR,KAAK,GAAGV,UAAU,CAACC,MAAM,CAACG,eAAR,EAAyBH,MAAM,CAAC,uBAAD,CAA/B,CAAb,GAAyED,UAAU,CAACC,MAAM,CAACG,eAAR,EAAyBK,UAAU,IAAIR,MAAM,CAAC,4BAAD,CAA7C,EAA6EO,QAAQ,IAAIP,MAAM,CAAC,0BAAD,CAA/F,EAA6HU,SAAS,IAAIV,MAAM,CAAC,2BAAD,CAAhJ,CAA1G;EACA,OAAO,aAAaL,KAAK,CAACuB,aAAN,CAAoB,KAApB,EAA2B;IAC7CD,SAAS,EAAEA,SADkC;IAE7CE,OAAO,EAAEb;EAFoC,CAA3B,EAGjB,aAAaX,KAAK,CAACuB,aAAN,CAAoB,KAApB,EAA2B;IACzCD,SAAS,EAAEjB,MAAM,CAACE;EADuB,CAA3B,EAEb,aAAaP,KAAK,CAACuB,aAAN,CAAoBhB,QAApB,EAA8B;IAC5CG,KAAK,EAAED,kBADqC;IAE5CgB,WAAW,EAAE,IAF+B;IAG5CC,OAAO,EAAEd,QAHmC;IAI5CI,QAAQ,EAAEA,QAJkC;IAK5CW,QAAQ,EAAEhB,WALkC;IAM5CiB,GAAG,EAAEV;EANuC,CAA9B,CAFA,CAHI,EAYf,aAAalB,KAAK,CAACuB,aAAN,CAAoB,MAApB,EAA4B;IAC5CD,SAAS,EAAEjB,MAAM,CAACwB;EAD0B,CAA5B,EAEfnB,KAFe,CAZE,CAApB;AAeD;;AAED,SAASF,eAAT"},"metadata":{},"sourceType":"module"}