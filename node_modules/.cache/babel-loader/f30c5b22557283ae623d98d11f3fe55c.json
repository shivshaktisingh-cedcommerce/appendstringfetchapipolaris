{"ast":null,"code":"import React, { PureComponent, createRef } from 'react';\nimport { Transition, CSSTransition } from 'react-transition-group';\nimport { motion } from '@shopify/polaris-tokens';\nimport { debounce } from '../../utilities/debounce.js';\nimport { classNames } from '../../utilities/css.js';\nimport { clamp } from '../../utilities/clamp.js';\nimport styles from './BulkActions.scss.js';\nimport { BulkActionMenu } from './components/BulkActionMenu/BulkActionMenu.js';\nimport { CheckableButton } from '../CheckableButton/CheckableButton.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Button } from '../Button/Button.js';\nimport { Popover } from '../Popover/Popover.js';\nimport { BulkActionButton } from './components/BulkActionButton/BulkActionButton.js';\nimport { ActionList } from '../ActionList/ActionList.js';\nimport { ButtonGroup } from '../ButtonGroup/ButtonGroup.js';\nimport { EventListener } from '../EventListener/EventListener.js';\nconst MAX_PROMOTED_ACTIONS = 2;\nconst slideClasses = {\n  appear: classNames(styles.Slide, styles['Slide-appear']),\n  appearActive: classNames(styles.Slide, styles['Slide-appearing']),\n  enter: classNames(styles.Slide, styles['Slide-enter']),\n  enterActive: classNames(styles.Slide, styles['Slide-entering']),\n  exit: classNames(styles.Slide, styles['Slide-exit'])\n};\n\nclass BulkActionsInner extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      smallScreenPopoverVisible: false,\n      largeScreenPopoverVisible: false,\n      containerWidth: 0,\n      measuring: true\n    };\n    this.containerNode = null;\n    this.largeScreenButtonsNode = null;\n    this.moreActionsNode = null;\n    this.checkableWrapperNode = /*#__PURE__*/createRef();\n    this.largeScreenGroupNode = /*#__PURE__*/createRef();\n    this.smallScreenGroupNode = /*#__PURE__*/createRef();\n    this.promotedActionsWidths = [];\n    this.bulkActionsWidth = 0;\n    this.addedMoreActionsWidthForMeasuring = 0;\n    this.handleResize = debounce(() => {\n      const {\n        smallScreenPopoverVisible,\n        largeScreenPopoverVisible\n      } = this.state;\n\n      if (this.containerNode) {\n        const containerWidth = this.containerNode.getBoundingClientRect().width;\n\n        if (containerWidth > 0) {\n          this.setState({\n            containerWidth\n          });\n        }\n      }\n\n      if (smallScreenPopoverVisible || largeScreenPopoverVisible) {\n        this.setState({\n          smallScreenPopoverVisible: false,\n          largeScreenPopoverVisible: false\n        });\n      }\n    }, 50, {\n      trailing: true\n    });\n\n    this.setLargeScreenButtonsNode = node => {\n      this.largeScreenButtonsNode = node;\n    };\n\n    this.setContainerNode = node => {\n      this.containerNode = node;\n    };\n\n    this.setMoreActionsNode = node => {\n      this.moreActionsNode = node;\n    };\n\n    this.setSelectMode = val => {\n      const {\n        onSelectModeToggle\n      } = this.props;\n\n      if (onSelectModeToggle) {\n        onSelectModeToggle(val);\n      }\n    };\n\n    this.toggleSmallScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.smallScreenPopoverVisible);\n      }\n\n      this.setState(_ref => {\n        let {\n          smallScreenPopoverVisible\n        } = _ref;\n        return {\n          smallScreenPopoverVisible: !smallScreenPopoverVisible\n        };\n      });\n    };\n\n    this.toggleLargeScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.largeScreenPopoverVisible);\n      }\n\n      this.setState(_ref2 => {\n        let {\n          largeScreenPopoverVisible\n        } = _ref2;\n        return {\n          largeScreenPopoverVisible: !largeScreenPopoverVisible\n        };\n      });\n    };\n\n    this.handleMeasurement = width => {\n      const {\n        measuring\n      } = this.state;\n\n      if (measuring) {\n        this.promotedActionsWidths.push(width);\n      }\n    };\n  }\n\n  numberOfPromotedActionsToRender() {\n    const {\n      promotedActions\n    } = this.props;\n    const {\n      containerWidth,\n      measuring\n    } = this.state;\n\n    if (!promotedActions) {\n      return 0;\n    }\n\n    if (containerWidth >= this.bulkActionsWidth || measuring) {\n      return promotedActions.length;\n    }\n\n    let sufficientSpace = false;\n    let counter = promotedActions.length - 1;\n    let totalWidth = 0;\n\n    while (!sufficientSpace && counter >= 0) {\n      totalWidth += this.promotedActionsWidths[counter];\n      const widthWithRemovedAction = this.bulkActionsWidth - totalWidth + this.addedMoreActionsWidthForMeasuring;\n\n      if (containerWidth >= widthWithRemovedAction) {\n        sufficientSpace = true;\n      } else {\n        counter--;\n      }\n    }\n\n    return clamp(counter, 0, promotedActions.length);\n  }\n\n  hasActions() {\n    const {\n      promotedActions,\n      actions\n    } = this.props;\n    return Boolean(promotedActions && promotedActions.length > 0 || actions && actions.length > 0);\n  }\n\n  actionSections() {\n    const {\n      actions\n    } = this.props;\n\n    if (!actions || actions.length === 0) {\n      return;\n    }\n\n    if (instanceOfBulkActionListSectionArray(actions)) {\n      return actions;\n    }\n\n    if (instanceOfBulkActionArray(actions)) {\n      return [{\n        items: actions\n      }];\n    }\n  }\n\n  rolledInPromotedActions() {\n    const {\n      promotedActions\n    } = this.props;\n    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n\n    if (!promotedActions || promotedActions.length === 0 || numberOfPromotedActionsToRender >= promotedActions.length) {\n      return [];\n    }\n\n    const rolledInPromotedActions = promotedActions.map(action => {\n      if (instanceOfMenuGroupDescriptor(action)) {\n        return {\n          items: [...action.actions]\n        };\n      }\n\n      return {\n        items: [action]\n      };\n    });\n    return rolledInPromotedActions.slice(numberOfPromotedActionsToRender);\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  componentDidMount() {\n    const {\n      actions,\n      promotedActions\n    } = this.props;\n\n    if (promotedActions && !actions && this.moreActionsNode) {\n      this.addedMoreActionsWidthForMeasuring = this.moreActionsNode.getBoundingClientRect().width;\n    }\n\n    this.bulkActionsWidth = this.largeScreenButtonsNode ? this.largeScreenButtonsNode.getBoundingClientRect().width - this.addedMoreActionsWidthForMeasuring : 0;\n\n    if (this.containerNode) {\n      this.setState({\n        containerWidth: this.containerNode.getBoundingClientRect().width,\n        measuring: false\n      });\n    }\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  render() {\n    const {\n      selectMode,\n      accessibilityLabel,\n      label = '',\n      onToggleAll,\n      selected,\n      smallScreen,\n      disabled,\n      promotedActions,\n      paginatedSelectAllText = null,\n      paginatedSelectAllAction,\n      i18n\n    } = this.props;\n    const actionSections = this.actionSections();\n\n    if (promotedActions && promotedActions.length > MAX_PROMOTED_ACTIONS && process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(i18n.translate('Polaris.ResourceList.BulkActions.warningMessage', {\n        maxPromotedActions: MAX_PROMOTED_ACTIONS\n      }));\n    }\n\n    const {\n      smallScreenPopoverVisible,\n      largeScreenPopoverVisible,\n      measuring\n    } = this.state;\n    const paginatedSelectAllActionMarkup = paginatedSelectAllAction ? /*#__PURE__*/React.createElement(Button, {\n      onClick: paginatedSelectAllAction.onAction,\n      plain: true,\n      disabled: disabled\n    }, paginatedSelectAllAction.content) : null;\n    const paginatedSelectAllTextMarkup = paginatedSelectAllText && paginatedSelectAllAction ? /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-live\": \"polite\"\n    }, paginatedSelectAllText) : paginatedSelectAllText;\n    const paginatedSelectAllMarkup = paginatedSelectAllActionMarkup || paginatedSelectAllTextMarkup ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.PaginatedSelectAll\n    }, paginatedSelectAllTextMarkup, \" \", paginatedSelectAllActionMarkup) : null;\n    const cancelButton = /*#__PURE__*/React.createElement(Button, {\n      onClick: this.setSelectMode.bind(this, false),\n      disabled: disabled\n    }, i18n.translate('Polaris.Common.cancel'));\n    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n    const allActionsPopover = this.hasActions() ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React.createElement(Popover, {\n      active: smallScreenPopoverVisible,\n      activator: /*#__PURE__*/React.createElement(BulkActionButton, {\n        disclosure: true,\n        onAction: this.toggleSmallScreenPopover,\n        content: i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel'),\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleSmallScreenPopover\n    }, /*#__PURE__*/React.createElement(ActionList, {\n      items: promotedActions,\n      sections: actionSections,\n      onActionAnyItem: this.toggleSmallScreenPopover\n    }))) : null;\n    const promotedActionsMarkup = promotedActions && numberOfPromotedActionsToRender > 0 ? [...promotedActions].slice(0, numberOfPromotedActionsToRender).map((action, index) => {\n      if (instanceOfMenuGroupDescriptor(action)) {\n        return /*#__PURE__*/React.createElement(BulkActionMenu, Object.assign({\n          key: index\n        }, action, {\n          isNewBadgeInBadgeActions: this.isNewBadgeInBadgeActions()\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(BulkActionButton, Object.assign({\n        key: index,\n        disabled: disabled\n      }, action, {\n        handleMeasurement: this.handleMeasurement\n      }));\n    }) : null;\n    const rolledInPromotedActions = this.rolledInPromotedActions();\n    const activatorLabel = !promotedActions || promotedActions && numberOfPromotedActionsToRender === 0 && !measuring ? i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel') : i18n.translate('Polaris.ResourceList.BulkActions.moreActionsActivatorLabel');\n    let combinedActions = [];\n\n    if (actionSections && rolledInPromotedActions.length > 0) {\n      combinedActions = [...rolledInPromotedActions, ...actionSections];\n    } else if (actionSections) {\n      combinedActions = actionSections;\n    } else if (rolledInPromotedActions.length > 0) {\n      combinedActions = [...rolledInPromotedActions];\n    }\n\n    const actionsPopover = actionSections || rolledInPromotedActions.length > 0 || measuring ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React.createElement(Popover, {\n      active: largeScreenPopoverVisible,\n      activator: /*#__PURE__*/React.createElement(BulkActionButton, {\n        disclosure: true,\n        onAction: this.toggleLargeScreenPopover,\n        content: activatorLabel,\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleLargeScreenPopover\n    }, /*#__PURE__*/React.createElement(ActionList, {\n      sections: combinedActions,\n      onActionAnyItem: this.toggleLargeScreenPopover\n    }))) : null;\n    const checkableButtonProps = {\n      accessibilityLabel,\n      label,\n      selected,\n      selectMode,\n      onToggleAll,\n      measuring,\n      disabled\n    };\n    const smallScreenGroup = smallScreen ? /*#__PURE__*/React.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"smallGroup\",\n      nodeRef: this.smallScreenGroupNode\n    }, status => {\n      const smallScreenGroupClassName = classNames(styles.Group, styles['Group-smallScreen'], styles[`Group-${status}`]);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: smallScreenGroupClassName,\n        ref: this.smallScreenGroupNode\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        segmented: true\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.checkableWrapperNode,\n        in: selectMode,\n        timeout: parseInt(motion['duration-200'], 10),\n        classNames: slideClasses,\n        appear: !selectMode\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.CheckableContainer,\n        ref: this.checkableWrapperNode\n      }, /*#__PURE__*/React.createElement(CheckableButton, Object.assign({}, checkableButtonProps, {\n        smallScreen: true\n      })))), allActionsPopover, cancelButton)), paginatedSelectAllMarkup);\n    }) : null;\n    const largeGroupContent = promotedActionsMarkup || actionsPopover ? /*#__PURE__*/React.createElement(ButtonGroup, {\n      segmented: true\n    }, /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps), promotedActionsMarkup, actionsPopover) : /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps);\n    const largeScreenGroup = smallScreen ? null : /*#__PURE__*/React.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"largeGroup\",\n      nodeRef: this.largeScreenGroupNode\n    }, status => {\n      const largeScreenGroupClassName = classNames(styles.Group, styles['Group-largeScreen'], !measuring && styles[`Group-${status}`], measuring && styles['Group-measuring']);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: largeScreenGroupClassName,\n        ref: this.largeScreenGroupNode\n      }, /*#__PURE__*/React.createElement(EventListener, {\n        event: \"resize\",\n        handler: this.handleResize\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper,\n        ref: this.setLargeScreenButtonsNode\n      }, largeGroupContent), paginatedSelectAllMarkup);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.setContainerNode\n    }, smallScreenGroup, largeScreenGroup);\n  }\n\n  isNewBadgeInBadgeActions() {\n    const actions = this.actionSections();\n    if (!actions) return false;\n\n    for (const action of actions) {\n      for (const item of action.items) {\n        var _item$badge;\n\n        if (((_item$badge = item.badge) === null || _item$badge === void 0 ? void 0 : _item$badge.status) === 'new') return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nfunction instanceOfBulkActionListSectionArray(actions) {\n  const validList = actions.filter(action => {\n    return action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfBulkActionArray(actions) {\n  const validList = actions.filter(action => {\n    return !action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfMenuGroupDescriptor(action) {\n  return 'title' in action;\n}\n\nfunction BulkActions(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React.createElement(BulkActionsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { BulkActions };","map":{"version":3,"names":["React","PureComponent","createRef","Transition","CSSTransition","motion","debounce","classNames","clamp","styles","BulkActionMenu","CheckableButton","useI18n","Button","Popover","BulkActionButton","ActionList","ButtonGroup","EventListener","MAX_PROMOTED_ACTIONS","slideClasses","appear","Slide","appearActive","enter","enterActive","exit","BulkActionsInner","constructor","state","smallScreenPopoverVisible","largeScreenPopoverVisible","containerWidth","measuring","containerNode","largeScreenButtonsNode","moreActionsNode","checkableWrapperNode","largeScreenGroupNode","smallScreenGroupNode","promotedActionsWidths","bulkActionsWidth","addedMoreActionsWidthForMeasuring","handleResize","getBoundingClientRect","width","setState","trailing","setLargeScreenButtonsNode","node","setContainerNode","setMoreActionsNode","setSelectMode","val","onSelectModeToggle","props","toggleSmallScreenPopover","onMoreActionPopoverToggle","toggleLargeScreenPopover","handleMeasurement","push","numberOfPromotedActionsToRender","promotedActions","length","sufficientSpace","counter","totalWidth","widthWithRemovedAction","hasActions","actions","Boolean","actionSections","instanceOfBulkActionListSectionArray","instanceOfBulkActionArray","items","rolledInPromotedActions","map","action","instanceOfMenuGroupDescriptor","slice","componentDidMount","render","selectMode","accessibilityLabel","label","onToggleAll","selected","smallScreen","disabled","paginatedSelectAllText","paginatedSelectAllAction","i18n","process","env","NODE_ENV","console","warn","translate","maxPromotedActions","paginatedSelectAllActionMarkup","createElement","onClick","onAction","plain","content","paginatedSelectAllTextMarkup","paginatedSelectAllMarkup","className","PaginatedSelectAll","cancelButton","bind","allActionsPopover","ref","active","activator","disclosure","indicator","isNewBadgeInBadgeActions","onClose","sections","onActionAnyItem","promotedActionsMarkup","index","Object","assign","key","activatorLabel","combinedActions","actionsPopover","checkableButtonProps","smallScreenGroup","timeout","in","nodeRef","status","smallScreenGroupClassName","Group","ButtonGroupWrapper","segmented","parseInt","CheckableContainer","largeGroupContent","largeScreenGroup","largeScreenGroupClassName","event","handler","item","_item$badge","badge","validList","filter","BulkActions"],"sources":["/home/cedcoss/react/After interview/polarisdashoboard/node_modules/@shopify/polaris/build/esm/components/BulkActions/BulkActions.js"],"sourcesContent":["import React, { PureComponent, createRef } from 'react';\nimport { Transition, CSSTransition } from 'react-transition-group';\nimport { motion } from '@shopify/polaris-tokens';\nimport { debounce } from '../../utilities/debounce.js';\nimport { classNames } from '../../utilities/css.js';\nimport { clamp } from '../../utilities/clamp.js';\nimport styles from './BulkActions.scss.js';\nimport { BulkActionMenu } from './components/BulkActionMenu/BulkActionMenu.js';\nimport { CheckableButton } from '../CheckableButton/CheckableButton.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { Button } from '../Button/Button.js';\nimport { Popover } from '../Popover/Popover.js';\nimport { BulkActionButton } from './components/BulkActionButton/BulkActionButton.js';\nimport { ActionList } from '../ActionList/ActionList.js';\nimport { ButtonGroup } from '../ButtonGroup/ButtonGroup.js';\nimport { EventListener } from '../EventListener/EventListener.js';\n\nconst MAX_PROMOTED_ACTIONS = 2;\nconst slideClasses = {\n  appear: classNames(styles.Slide, styles['Slide-appear']),\n  appearActive: classNames(styles.Slide, styles['Slide-appearing']),\n  enter: classNames(styles.Slide, styles['Slide-enter']),\n  enterActive: classNames(styles.Slide, styles['Slide-entering']),\n  exit: classNames(styles.Slide, styles['Slide-exit'])\n};\n\nclass BulkActionsInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      smallScreenPopoverVisible: false,\n      largeScreenPopoverVisible: false,\n      containerWidth: 0,\n      measuring: true\n    };\n    this.containerNode = null;\n    this.largeScreenButtonsNode = null;\n    this.moreActionsNode = null;\n    this.checkableWrapperNode = /*#__PURE__*/createRef();\n    this.largeScreenGroupNode = /*#__PURE__*/createRef();\n    this.smallScreenGroupNode = /*#__PURE__*/createRef();\n    this.promotedActionsWidths = [];\n    this.bulkActionsWidth = 0;\n    this.addedMoreActionsWidthForMeasuring = 0;\n    this.handleResize = debounce(() => {\n      const {\n        smallScreenPopoverVisible,\n        largeScreenPopoverVisible\n      } = this.state;\n\n      if (this.containerNode) {\n        const containerWidth = this.containerNode.getBoundingClientRect().width;\n\n        if (containerWidth > 0) {\n          this.setState({\n            containerWidth\n          });\n        }\n      }\n\n      if (smallScreenPopoverVisible || largeScreenPopoverVisible) {\n        this.setState({\n          smallScreenPopoverVisible: false,\n          largeScreenPopoverVisible: false\n        });\n      }\n    }, 50, {\n      trailing: true\n    });\n\n    this.setLargeScreenButtonsNode = node => {\n      this.largeScreenButtonsNode = node;\n    };\n\n    this.setContainerNode = node => {\n      this.containerNode = node;\n    };\n\n    this.setMoreActionsNode = node => {\n      this.moreActionsNode = node;\n    };\n\n    this.setSelectMode = val => {\n      const {\n        onSelectModeToggle\n      } = this.props;\n\n      if (onSelectModeToggle) {\n        onSelectModeToggle(val);\n      }\n    };\n\n    this.toggleSmallScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.smallScreenPopoverVisible);\n      }\n\n      this.setState(({\n        smallScreenPopoverVisible\n      }) => ({\n        smallScreenPopoverVisible: !smallScreenPopoverVisible\n      }));\n    };\n\n    this.toggleLargeScreenPopover = () => {\n      if (this.props.onMoreActionPopoverToggle) {\n        this.props.onMoreActionPopoverToggle(this.state.largeScreenPopoverVisible);\n      }\n\n      this.setState(({\n        largeScreenPopoverVisible\n      }) => ({\n        largeScreenPopoverVisible: !largeScreenPopoverVisible\n      }));\n    };\n\n    this.handleMeasurement = width => {\n      const {\n        measuring\n      } = this.state;\n\n      if (measuring) {\n        this.promotedActionsWidths.push(width);\n      }\n    };\n  }\n\n  numberOfPromotedActionsToRender() {\n    const {\n      promotedActions\n    } = this.props;\n    const {\n      containerWidth,\n      measuring\n    } = this.state;\n\n    if (!promotedActions) {\n      return 0;\n    }\n\n    if (containerWidth >= this.bulkActionsWidth || measuring) {\n      return promotedActions.length;\n    }\n\n    let sufficientSpace = false;\n    let counter = promotedActions.length - 1;\n    let totalWidth = 0;\n\n    while (!sufficientSpace && counter >= 0) {\n      totalWidth += this.promotedActionsWidths[counter];\n      const widthWithRemovedAction = this.bulkActionsWidth - totalWidth + this.addedMoreActionsWidthForMeasuring;\n\n      if (containerWidth >= widthWithRemovedAction) {\n        sufficientSpace = true;\n      } else {\n        counter--;\n      }\n    }\n\n    return clamp(counter, 0, promotedActions.length);\n  }\n\n  hasActions() {\n    const {\n      promotedActions,\n      actions\n    } = this.props;\n    return Boolean(promotedActions && promotedActions.length > 0 || actions && actions.length > 0);\n  }\n\n  actionSections() {\n    const {\n      actions\n    } = this.props;\n\n    if (!actions || actions.length === 0) {\n      return;\n    }\n\n    if (instanceOfBulkActionListSectionArray(actions)) {\n      return actions;\n    }\n\n    if (instanceOfBulkActionArray(actions)) {\n      return [{\n        items: actions\n      }];\n    }\n  }\n\n  rolledInPromotedActions() {\n    const {\n      promotedActions\n    } = this.props;\n    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n\n    if (!promotedActions || promotedActions.length === 0 || numberOfPromotedActionsToRender >= promotedActions.length) {\n      return [];\n    }\n\n    const rolledInPromotedActions = promotedActions.map(action => {\n      if (instanceOfMenuGroupDescriptor(action)) {\n        return {\n          items: [...action.actions]\n        };\n      }\n\n      return {\n        items: [action]\n      };\n    });\n    return rolledInPromotedActions.slice(numberOfPromotedActionsToRender);\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  componentDidMount() {\n    const {\n      actions,\n      promotedActions\n    } = this.props;\n\n    if (promotedActions && !actions && this.moreActionsNode) {\n      this.addedMoreActionsWidthForMeasuring = this.moreActionsNode.getBoundingClientRect().width;\n    }\n\n    this.bulkActionsWidth = this.largeScreenButtonsNode ? this.largeScreenButtonsNode.getBoundingClientRect().width - this.addedMoreActionsWidthForMeasuring : 0;\n\n    if (this.containerNode) {\n      this.setState({\n        containerWidth: this.containerNode.getBoundingClientRect().width,\n        measuring: false\n      });\n    }\n  } // eslint-disable-next-line @typescript-eslint/member-ordering\n\n\n  render() {\n    const {\n      selectMode,\n      accessibilityLabel,\n      label = '',\n      onToggleAll,\n      selected,\n      smallScreen,\n      disabled,\n      promotedActions,\n      paginatedSelectAllText = null,\n      paginatedSelectAllAction,\n      i18n\n    } = this.props;\n    const actionSections = this.actionSections();\n\n    if (promotedActions && promotedActions.length > MAX_PROMOTED_ACTIONS && process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn(i18n.translate('Polaris.ResourceList.BulkActions.warningMessage', {\n        maxPromotedActions: MAX_PROMOTED_ACTIONS\n      }));\n    }\n\n    const {\n      smallScreenPopoverVisible,\n      largeScreenPopoverVisible,\n      measuring\n    } = this.state;\n    const paginatedSelectAllActionMarkup = paginatedSelectAllAction ? /*#__PURE__*/React.createElement(Button, {\n      onClick: paginatedSelectAllAction.onAction,\n      plain: true,\n      disabled: disabled\n    }, paginatedSelectAllAction.content) : null;\n    const paginatedSelectAllTextMarkup = paginatedSelectAllText && paginatedSelectAllAction ? /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-live\": \"polite\"\n    }, paginatedSelectAllText) : paginatedSelectAllText;\n    const paginatedSelectAllMarkup = paginatedSelectAllActionMarkup || paginatedSelectAllTextMarkup ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.PaginatedSelectAll\n    }, paginatedSelectAllTextMarkup, \" \", paginatedSelectAllActionMarkup) : null;\n    const cancelButton = /*#__PURE__*/React.createElement(Button, {\n      onClick: this.setSelectMode.bind(this, false),\n      disabled: disabled\n    }, i18n.translate('Polaris.Common.cancel'));\n    const numberOfPromotedActionsToRender = this.numberOfPromotedActionsToRender();\n    const allActionsPopover = this.hasActions() ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React.createElement(Popover, {\n      active: smallScreenPopoverVisible,\n      activator: /*#__PURE__*/React.createElement(BulkActionButton, {\n        disclosure: true,\n        onAction: this.toggleSmallScreenPopover,\n        content: i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel'),\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleSmallScreenPopover\n    }, /*#__PURE__*/React.createElement(ActionList, {\n      items: promotedActions,\n      sections: actionSections,\n      onActionAnyItem: this.toggleSmallScreenPopover\n    }))) : null;\n    const promotedActionsMarkup = promotedActions && numberOfPromotedActionsToRender > 0 ? [...promotedActions].slice(0, numberOfPromotedActionsToRender).map((action, index) => {\n      if (instanceOfMenuGroupDescriptor(action)) {\n        return /*#__PURE__*/React.createElement(BulkActionMenu, Object.assign({\n          key: index\n        }, action, {\n          isNewBadgeInBadgeActions: this.isNewBadgeInBadgeActions()\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(BulkActionButton, Object.assign({\n        key: index,\n        disabled: disabled\n      }, action, {\n        handleMeasurement: this.handleMeasurement\n      }));\n    }) : null;\n    const rolledInPromotedActions = this.rolledInPromotedActions();\n    const activatorLabel = !promotedActions || promotedActions && numberOfPromotedActionsToRender === 0 && !measuring ? i18n.translate('Polaris.ResourceList.BulkActions.actionsActivatorLabel') : i18n.translate('Polaris.ResourceList.BulkActions.moreActionsActivatorLabel');\n    let combinedActions = [];\n\n    if (actionSections && rolledInPromotedActions.length > 0) {\n      combinedActions = [...rolledInPromotedActions, ...actionSections];\n    } else if (actionSections) {\n      combinedActions = actionSections;\n    } else if (rolledInPromotedActions.length > 0) {\n      combinedActions = [...rolledInPromotedActions];\n    }\n\n    const actionsPopover = actionSections || rolledInPromotedActions.length > 0 || measuring ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Popover,\n      ref: this.setMoreActionsNode\n    }, /*#__PURE__*/React.createElement(Popover, {\n      active: largeScreenPopoverVisible,\n      activator: /*#__PURE__*/React.createElement(BulkActionButton, {\n        disclosure: true,\n        onAction: this.toggleLargeScreenPopover,\n        content: activatorLabel,\n        disabled: disabled,\n        indicator: this.isNewBadgeInBadgeActions()\n      }),\n      onClose: this.toggleLargeScreenPopover\n    }, /*#__PURE__*/React.createElement(ActionList, {\n      sections: combinedActions,\n      onActionAnyItem: this.toggleLargeScreenPopover\n    }))) : null;\n    const checkableButtonProps = {\n      accessibilityLabel,\n      label,\n      selected,\n      selectMode,\n      onToggleAll,\n      measuring,\n      disabled\n    };\n    const smallScreenGroup = smallScreen ? /*#__PURE__*/React.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"smallGroup\",\n      nodeRef: this.smallScreenGroupNode\n    }, status => {\n      const smallScreenGroupClassName = classNames(styles.Group, styles['Group-smallScreen'], styles[`Group-${status}`]);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: smallScreenGroupClassName,\n        ref: this.smallScreenGroupNode\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper\n      }, /*#__PURE__*/React.createElement(ButtonGroup, {\n        segmented: true\n      }, /*#__PURE__*/React.createElement(CSSTransition, {\n        nodeRef: this.checkableWrapperNode,\n        in: selectMode,\n        timeout: parseInt(motion['duration-200'], 10),\n        classNames: slideClasses,\n        appear: !selectMode\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.CheckableContainer,\n        ref: this.checkableWrapperNode\n      }, /*#__PURE__*/React.createElement(CheckableButton, Object.assign({}, checkableButtonProps, {\n        smallScreen: true\n      })))), allActionsPopover, cancelButton)), paginatedSelectAllMarkup);\n    }) : null;\n    const largeGroupContent = promotedActionsMarkup || actionsPopover ? /*#__PURE__*/React.createElement(ButtonGroup, {\n      segmented: true\n    }, /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps), promotedActionsMarkup, actionsPopover) : /*#__PURE__*/React.createElement(CheckableButton, checkableButtonProps);\n    const largeScreenGroup = smallScreen ? null : /*#__PURE__*/React.createElement(Transition, {\n      timeout: 0,\n      in: selectMode,\n      key: \"largeGroup\",\n      nodeRef: this.largeScreenGroupNode\n    }, status => {\n      const largeScreenGroupClassName = classNames(styles.Group, styles['Group-largeScreen'], !measuring && styles[`Group-${status}`], measuring && styles['Group-measuring']);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: largeScreenGroupClassName,\n        ref: this.largeScreenGroupNode\n      }, /*#__PURE__*/React.createElement(EventListener, {\n        event: \"resize\",\n        handler: this.handleResize\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.ButtonGroupWrapper,\n        ref: this.setLargeScreenButtonsNode\n      }, largeGroupContent), paginatedSelectAllMarkup);\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.setContainerNode\n    }, smallScreenGroup, largeScreenGroup);\n  }\n\n  isNewBadgeInBadgeActions() {\n    const actions = this.actionSections();\n    if (!actions) return false;\n\n    for (const action of actions) {\n      for (const item of action.items) {\n        var _item$badge;\n\n        if (((_item$badge = item.badge) === null || _item$badge === void 0 ? void 0 : _item$badge.status) === 'new') return true;\n      }\n    }\n\n    return false;\n  }\n\n}\n\nfunction instanceOfBulkActionListSectionArray(actions) {\n  const validList = actions.filter(action => {\n    return action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfBulkActionArray(actions) {\n  const validList = actions.filter(action => {\n    return !action.items;\n  });\n  return actions.length === validList.length;\n}\n\nfunction instanceOfMenuGroupDescriptor(action) {\n  return 'title' in action;\n}\n\nfunction BulkActions(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React.createElement(BulkActionsInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { BulkActions };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}