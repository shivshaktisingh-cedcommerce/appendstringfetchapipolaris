{"ast":null,"code":"const WEEK_LENGTH = 7;\n\nfunction getWeeksForMonth(month, year) {\n  let weekStartsOn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  const firstOfMonth = new Date(year, month, 1);\n  const firstDayOfWeek = firstOfMonth.getDay();\n  const weeks = [[]];\n  let currentWeek = weeks[0];\n  let currentDate = firstOfMonth;\n  const orderedWeekday = getOrderedWeekdays(weekStartsOn);\n\n  for (let i = 0; i < orderedWeekday.indexOf(firstDayOfWeek); i++) {\n    currentWeek.push(null);\n  }\n\n  while (currentDate.getMonth() === month) {\n    if (currentWeek.length === WEEK_LENGTH) {\n      currentWeek = [];\n      weeks.push(currentWeek);\n    }\n\n    currentWeek.push(currentDate);\n    currentDate = new Date(year, month, currentDate.getDate() + 1);\n  }\n\n  while (currentWeek.length < 7) {\n    currentWeek.push(null);\n  }\n\n  return weeks;\n}\n\nfunction dateIsInRange(day, range) {\n  if (day == null) {\n    return false;\n  }\n\n  const {\n    start,\n    end\n  } = range;\n  return Boolean(start && day > start && end && day < end);\n}\n\nfunction dateIsSelected(day, range) {\n  if (day == null) {\n    return false;\n  }\n\n  const {\n    start,\n    end\n  } = range;\n  return Boolean(start && isSameDay(start, day) || end && isSameDay(end, day));\n}\n\nfunction isSameDay(day1, day2) {\n  return day1.getDate() === day2.getDate() && day1.getMonth() === day2.getMonth() && day1.getFullYear() === day2.getFullYear();\n}\n\nfunction getNewRange(range, selected) {\n  if (range == null) {\n    return {\n      start: selected,\n      end: selected\n    };\n  }\n\n  const {\n    start,\n    end\n  } = range;\n\n  if (end && (isDateAfter(start, end) || isDateBefore(start, end))) {\n    return {\n      start: selected,\n      end: selected\n    };\n  }\n\n  if (start) {\n    if (isDateBefore(selected, start)) {\n      return {\n        start: selected,\n        end: selected\n      };\n    }\n\n    return {\n      start,\n      end: selected\n    };\n  }\n\n  if (end) {\n    if (isDateBefore(selected, end)) {\n      return {\n        start: selected,\n        end\n      };\n    }\n\n    return {\n      start: start || end,\n      end: selected\n    };\n  }\n\n  return {\n    start: selected,\n    end: selected\n  };\n}\n\nfunction getNextDisplayMonth(month) {\n  if (month === 11) {\n    return 0;\n  }\n\n  return month + 1;\n}\n\nfunction getNextDisplayYear(month, year) {\n  if (month === 11) {\n    return year + 1;\n  }\n\n  return year;\n}\n\nfunction getPreviousDisplayMonth(month) {\n  if (month === 0) {\n    return 11;\n  }\n\n  return month - 1;\n}\n\nfunction getPreviousDisplayYear(month, year) {\n  if (month === 0) {\n    return year - 1;\n  }\n\n  return year;\n}\n\nfunction isDateAfter(date, dateToCompare) {\n  return date.getTime() > dateToCompare.getTime();\n}\n\nfunction isDateBefore(date, dateToCompare) {\n  return date.getTime() < dateToCompare.getTime();\n}\n\nfunction isDateDisabled(date, datesToCompare) {\n  return datesToCompare.some(dateToCompare => {\n    return date.getTime() === dateToCompare.getTime();\n  });\n}\n\nconst WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];\n\nfunction getOrderedWeekdays(weekStartsOn) {\n  const weekDays = [...WEEKDAYS];\n  const restOfDays = weekDays.splice(weekStartsOn);\n  return [...restOfDays, ...weekDays];\n}\n\nexport { dateIsInRange, dateIsSelected, getNewRange, getNextDisplayMonth, getNextDisplayYear, getOrderedWeekdays, getPreviousDisplayMonth, getPreviousDisplayYear, getWeeksForMonth, isDateAfter, isDateBefore, isDateDisabled, isSameDay };","map":{"version":3,"names":["WEEK_LENGTH","getWeeksForMonth","month","year","weekStartsOn","firstOfMonth","Date","firstDayOfWeek","getDay","weeks","currentWeek","currentDate","orderedWeekday","getOrderedWeekdays","i","indexOf","push","getMonth","length","getDate","dateIsInRange","day","range","start","end","Boolean","dateIsSelected","isSameDay","day1","day2","getFullYear","getNewRange","selected","isDateAfter","isDateBefore","getNextDisplayMonth","getNextDisplayYear","getPreviousDisplayMonth","getPreviousDisplayYear","date","dateToCompare","getTime","isDateDisabled","datesToCompare","some","WEEKDAYS","weekDays","restOfDays","splice"],"sources":["/home/cedcoss/react/After interview/polarisdashoboard/node_modules/@shopify/polaris/build/esm/utilities/dates.js"],"sourcesContent":["const WEEK_LENGTH = 7;\nfunction getWeeksForMonth(month, year, weekStartsOn = 0) {\n  const firstOfMonth = new Date(year, month, 1);\n  const firstDayOfWeek = firstOfMonth.getDay();\n  const weeks = [[]];\n  let currentWeek = weeks[0];\n  let currentDate = firstOfMonth;\n  const orderedWeekday = getOrderedWeekdays(weekStartsOn);\n\n  for (let i = 0; i < orderedWeekday.indexOf(firstDayOfWeek); i++) {\n    currentWeek.push(null);\n  }\n\n  while (currentDate.getMonth() === month) {\n    if (currentWeek.length === WEEK_LENGTH) {\n      currentWeek = [];\n      weeks.push(currentWeek);\n    }\n\n    currentWeek.push(currentDate);\n    currentDate = new Date(year, month, currentDate.getDate() + 1);\n  }\n\n  while (currentWeek.length < 7) {\n    currentWeek.push(null);\n  }\n\n  return weeks;\n}\nfunction dateIsInRange(day, range) {\n  if (day == null) {\n    return false;\n  }\n\n  const {\n    start,\n    end\n  } = range;\n  return Boolean(start && day > start && end && day < end);\n}\nfunction dateIsSelected(day, range) {\n  if (day == null) {\n    return false;\n  }\n\n  const {\n    start,\n    end\n  } = range;\n  return Boolean(start && isSameDay(start, day) || end && isSameDay(end, day));\n}\nfunction isSameDay(day1, day2) {\n  return day1.getDate() === day2.getDate() && day1.getMonth() === day2.getMonth() && day1.getFullYear() === day2.getFullYear();\n}\nfunction getNewRange(range, selected) {\n  if (range == null) {\n    return {\n      start: selected,\n      end: selected\n    };\n  }\n\n  const {\n    start,\n    end\n  } = range;\n\n  if (end && (isDateAfter(start, end) || isDateBefore(start, end))) {\n    return {\n      start: selected,\n      end: selected\n    };\n  }\n\n  if (start) {\n    if (isDateBefore(selected, start)) {\n      return {\n        start: selected,\n        end: selected\n      };\n    }\n\n    return {\n      start,\n      end: selected\n    };\n  }\n\n  if (end) {\n    if (isDateBefore(selected, end)) {\n      return {\n        start: selected,\n        end\n      };\n    }\n\n    return {\n      start: start || end,\n      end: selected\n    };\n  }\n\n  return {\n    start: selected,\n    end: selected\n  };\n}\nfunction getNextDisplayMonth(month) {\n  if (month === 11) {\n    return 0;\n  }\n\n  return month + 1;\n}\nfunction getNextDisplayYear(month, year) {\n  if (month === 11) {\n    return year + 1;\n  }\n\n  return year;\n}\nfunction getPreviousDisplayMonth(month) {\n  if (month === 0) {\n    return 11;\n  }\n\n  return month - 1;\n}\nfunction getPreviousDisplayYear(month, year) {\n  if (month === 0) {\n    return year - 1;\n  }\n\n  return year;\n}\nfunction isDateAfter(date, dateToCompare) {\n  return date.getTime() > dateToCompare.getTime();\n}\nfunction isDateBefore(date, dateToCompare) {\n  return date.getTime() < dateToCompare.getTime();\n}\nfunction isDateDisabled(date, datesToCompare) {\n  return datesToCompare.some(dateToCompare => {\n    return date.getTime() === dateToCompare.getTime();\n  });\n}\nconst WEEKDAYS = [0, 1, 2, 3, 4, 5, 6];\nfunction getOrderedWeekdays(weekStartsOn) {\n  const weekDays = [...WEEKDAYS];\n  const restOfDays = weekDays.splice(weekStartsOn);\n  return [...restOfDays, ...weekDays];\n}\n\nexport { dateIsInRange, dateIsSelected, getNewRange, getNextDisplayMonth, getNextDisplayYear, getOrderedWeekdays, getPreviousDisplayMonth, getPreviousDisplayYear, getWeeksForMonth, isDateAfter, isDateBefore, isDateDisabled, isSameDay };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}