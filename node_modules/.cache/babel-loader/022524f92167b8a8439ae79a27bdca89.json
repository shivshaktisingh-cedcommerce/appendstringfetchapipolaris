{"ast":null,"code":"import React, { useRef, useEffect } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport { focusFirstFocusableNode, handleMouseUpByBlurring } from '../../../../utilities/focus.js';\nimport styles from '../../Tabs.scss.js';\nimport { UnstyledLink } from '../../../UnstyledLink/UnstyledLink.js';\n\nfunction Tab(_ref) {\n  let {\n    id,\n    focused,\n    siblingTabHasFocus,\n    children,\n    onClick,\n    selected,\n    url,\n    panelID,\n    measuring,\n    accessibilityLabel\n  } = _ref;\n  const wasSelected = useRef(selected);\n  const panelFocused = useRef(false);\n  const node = useRef(null); // A tab can start selected when it is moved from the disclosure dropdown\n  // into the main list, so we need to send focus from the tab to the panel\n  // on mount and update\n\n  useEffect(() => {\n    if (measuring) {\n      return;\n    } // Because of timing issues with the render, we may still have the old,\n    // in-disclosure version of the tab that has focus. Check for this\n    // as a second indicator of focus\n\n\n    const itemHadFocus = focused || document.activeElement && document.activeElement.id === id; // If we just check for selected, the panel for the active tab will\n    // be focused on page load, which we don’t want\n\n    if (itemHadFocus && selected && panelID != null && !panelFocused.current) {\n      focusPanelID(panelID);\n      panelFocused.current = true;\n    }\n\n    if (selected && !wasSelected.current && panelID != null) {\n      focusPanelID(panelID);\n    } else if (focused && node.current != null) {\n      focusFirstFocusableNode(node.current);\n    }\n\n    wasSelected.current = selected;\n  }, [focused, id, measuring, panelID, selected]);\n  const handleClick = onClick && onClick.bind(null, id);\n  const className = classNames(styles.Tab, selected && styles['Tab-selected']);\n  let tabIndex;\n\n  if (selected && !siblingTabHasFocus && !measuring) {\n    tabIndex = 0;\n  } else if (focused && !measuring) {\n    tabIndex = 0;\n  } else {\n    tabIndex = -1;\n  }\n\n  const tabContainerClassNames = classNames(styles.TabContainer, selected && styles.Underline);\n  const markup = url ? /*#__PURE__*/React.createElement(UnstyledLink, {\n    id: id,\n    url: url,\n    role: \"tab\",\n    tabIndex: tabIndex,\n    onClick: handleClick,\n    className: className,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    onMouseUp: handleMouseUpByBlurring\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Title\n  }, children)) : /*#__PURE__*/React.createElement(\"button\", {\n    id: id,\n    role: \"tab\",\n    type: \"button\",\n    tabIndex: tabIndex,\n    className: className,\n    onClick: handleClick,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    onMouseUp: handleMouseUpByBlurring\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Title\n  }, children));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: tabContainerClassNames,\n    ref: node,\n    role: \"presentation\"\n  }, markup);\n}\n\nfunction focusPanelID(panelID) {\n  const panel = document.getElementById(panelID);\n\n  if (panel) {\n    panel.focus({\n      preventScroll: true\n    });\n  }\n}\n\nexport { Tab };","map":{"version":3,"names":["React","useRef","useEffect","classNames","focusFirstFocusableNode","handleMouseUpByBlurring","styles","UnstyledLink","Tab","id","focused","siblingTabHasFocus","children","onClick","selected","url","panelID","measuring","accessibilityLabel","wasSelected","panelFocused","node","itemHadFocus","document","activeElement","current","focusPanelID","handleClick","bind","className","tabIndex","tabContainerClassNames","TabContainer","Underline","markup","createElement","role","onMouseUp","Title","type","ref","panel","getElementById","focus","preventScroll"],"sources":["/home/cedcoss/react/After interview/polarisdashoboard/node_modules/@shopify/polaris/build/esm/components/Tabs/components/Tab/Tab.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { classNames } from '../../../../utilities/css.js';\nimport { focusFirstFocusableNode, handleMouseUpByBlurring } from '../../../../utilities/focus.js';\nimport styles from '../../Tabs.scss.js';\nimport { UnstyledLink } from '../../../UnstyledLink/UnstyledLink.js';\n\nfunction Tab({\n  id,\n  focused,\n  siblingTabHasFocus,\n  children,\n  onClick,\n  selected,\n  url,\n  panelID,\n  measuring,\n  accessibilityLabel\n}) {\n  const wasSelected = useRef(selected);\n  const panelFocused = useRef(false);\n  const node = useRef(null); // A tab can start selected when it is moved from the disclosure dropdown\n  // into the main list, so we need to send focus from the tab to the panel\n  // on mount and update\n\n  useEffect(() => {\n    if (measuring) {\n      return;\n    } // Because of timing issues with the render, we may still have the old,\n    // in-disclosure version of the tab that has focus. Check for this\n    // as a second indicator of focus\n\n\n    const itemHadFocus = focused || document.activeElement && document.activeElement.id === id; // If we just check for selected, the panel for the active tab will\n    // be focused on page load, which we don’t want\n\n    if (itemHadFocus && selected && panelID != null && !panelFocused.current) {\n      focusPanelID(panelID);\n      panelFocused.current = true;\n    }\n\n    if (selected && !wasSelected.current && panelID != null) {\n      focusPanelID(panelID);\n    } else if (focused && node.current != null) {\n      focusFirstFocusableNode(node.current);\n    }\n\n    wasSelected.current = selected;\n  }, [focused, id, measuring, panelID, selected]);\n  const handleClick = onClick && onClick.bind(null, id);\n  const className = classNames(styles.Tab, selected && styles['Tab-selected']);\n  let tabIndex;\n\n  if (selected && !siblingTabHasFocus && !measuring) {\n    tabIndex = 0;\n  } else if (focused && !measuring) {\n    tabIndex = 0;\n  } else {\n    tabIndex = -1;\n  }\n\n  const tabContainerClassNames = classNames(styles.TabContainer, selected && styles.Underline);\n  const markup = url ? /*#__PURE__*/React.createElement(UnstyledLink, {\n    id: id,\n    url: url,\n    role: \"tab\",\n    tabIndex: tabIndex,\n    onClick: handleClick,\n    className: className,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    onMouseUp: handleMouseUpByBlurring\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Title\n  }, children)) : /*#__PURE__*/React.createElement(\"button\", {\n    id: id,\n    role: \"tab\",\n    type: \"button\",\n    tabIndex: tabIndex,\n    className: className,\n    onClick: handleClick,\n    \"aria-selected\": selected,\n    \"aria-controls\": panelID,\n    \"aria-label\": accessibilityLabel,\n    onMouseUp: handleMouseUpByBlurring\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.Title\n  }, children));\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: tabContainerClassNames,\n    ref: node,\n    role: \"presentation\"\n  }, markup);\n}\n\nfunction focusPanelID(panelID) {\n  const panel = document.getElementById(panelID);\n\n  if (panel) {\n    panel.focus({\n      preventScroll: true\n    });\n  }\n}\n\nexport { Tab };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}