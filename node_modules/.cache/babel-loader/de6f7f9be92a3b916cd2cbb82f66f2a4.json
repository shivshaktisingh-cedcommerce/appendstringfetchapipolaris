{"ast":null,"code":"import React, { useMemo } from 'react';\nimport { useBulkSelectionData, useHandleBulkSelection } from '../../utilities/index-provider/hooks.js';\nimport { IndexContext, IndexRowContext, IndexSelectionChangeContext } from '../../utilities/index-provider/context.js';\n\nfunction IndexProvider(_ref) {\n  let {\n    children,\n    resourceName: passedResourceName,\n    loading,\n    onSelectionChange,\n    selectedItemsCount = 0,\n    itemCount,\n    hasMoreItems,\n    condensed,\n    selectable: isSelectableIndex = true\n  } = _ref;\n  const {\n    paginatedSelectAllText,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    resourceName,\n    selectMode,\n    bulkSelectState\n  } = useBulkSelectionData({\n    selectedItemsCount,\n    itemCount,\n    hasMoreItems,\n    resourceName: passedResourceName\n  });\n  const handleSelectionChange = useHandleBulkSelection({\n    onSelectionChange\n  });\n  const contextValue = useMemo(() => ({\n    itemCount,\n    selectMode: selectMode && isSelectableIndex,\n    selectable: isSelectableIndex,\n    resourceName,\n    loading,\n    paginatedSelectAllText,\n    hasMoreItems,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    bulkSelectState,\n    selectedItemsCount,\n    condensed\n  }), [itemCount, selectMode, isSelectableIndex, resourceName, loading, paginatedSelectAllText, hasMoreItems, bulkActionsLabel, bulkActionsAccessibilityLabel, bulkSelectState, selectedItemsCount, condensed]);\n  const rowContextValue = useMemo(() => ({\n    selectable: isSelectableIndex,\n    selectMode: selectMode && isSelectableIndex,\n    condensed\n  }), [condensed, selectMode, isSelectableIndex]);\n  return /*#__PURE__*/React.createElement(IndexContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(IndexRowContext.Provider, {\n    value: rowContextValue\n  }, /*#__PURE__*/React.createElement(IndexSelectionChangeContext.Provider, {\n    value: handleSelectionChange\n  }, children)));\n}\n\nexport { IndexProvider };","map":{"version":3,"names":["React","useMemo","useBulkSelectionData","useHandleBulkSelection","IndexContext","IndexRowContext","IndexSelectionChangeContext","IndexProvider","children","resourceName","passedResourceName","loading","onSelectionChange","selectedItemsCount","itemCount","hasMoreItems","condensed","selectable","isSelectableIndex","paginatedSelectAllText","bulkActionsLabel","bulkActionsAccessibilityLabel","selectMode","bulkSelectState","handleSelectionChange","contextValue","rowContextValue","createElement","Provider","value"],"sources":["/home/cedcoss/react/After interview/polarisdashoboard/node_modules/@shopify/polaris/build/esm/components/IndexProvider/IndexProvider.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { useBulkSelectionData, useHandleBulkSelection } from '../../utilities/index-provider/hooks.js';\nimport { IndexContext, IndexRowContext, IndexSelectionChangeContext } from '../../utilities/index-provider/context.js';\n\nfunction IndexProvider({\n  children,\n  resourceName: passedResourceName,\n  loading,\n  onSelectionChange,\n  selectedItemsCount = 0,\n  itemCount,\n  hasMoreItems,\n  condensed,\n  selectable: isSelectableIndex = true\n}) {\n  const {\n    paginatedSelectAllText,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    resourceName,\n    selectMode,\n    bulkSelectState\n  } = useBulkSelectionData({\n    selectedItemsCount,\n    itemCount,\n    hasMoreItems,\n    resourceName: passedResourceName\n  });\n  const handleSelectionChange = useHandleBulkSelection({\n    onSelectionChange\n  });\n  const contextValue = useMemo(() => ({\n    itemCount,\n    selectMode: selectMode && isSelectableIndex,\n    selectable: isSelectableIndex,\n    resourceName,\n    loading,\n    paginatedSelectAllText,\n    hasMoreItems,\n    bulkActionsLabel,\n    bulkActionsAccessibilityLabel,\n    bulkSelectState,\n    selectedItemsCount,\n    condensed\n  }), [itemCount, selectMode, isSelectableIndex, resourceName, loading, paginatedSelectAllText, hasMoreItems, bulkActionsLabel, bulkActionsAccessibilityLabel, bulkSelectState, selectedItemsCount, condensed]);\n  const rowContextValue = useMemo(() => ({\n    selectable: isSelectableIndex,\n    selectMode: selectMode && isSelectableIndex,\n    condensed\n  }), [condensed, selectMode, isSelectableIndex]);\n  return /*#__PURE__*/React.createElement(IndexContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(IndexRowContext.Provider, {\n    value: rowContextValue\n  }, /*#__PURE__*/React.createElement(IndexSelectionChangeContext.Provider, {\n    value: handleSelectionChange\n  }, children)));\n}\n\nexport { IndexProvider };\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,oBAAT,EAA+BC,sBAA/B,QAA6D,yCAA7D;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,2BAAxC,QAA2E,2CAA3E;;AAEA,SAASC,aAAT,OAUG;EAAA,IAVoB;IACrBC,QADqB;IAErBC,YAAY,EAAEC,kBAFO;IAGrBC,OAHqB;IAIrBC,iBAJqB;IAKrBC,kBAAkB,GAAG,CALA;IAMrBC,SANqB;IAOrBC,YAPqB;IAQrBC,SARqB;IASrBC,UAAU,EAAEC,iBAAiB,GAAG;EATX,CAUpB;EACD,MAAM;IACJC,sBADI;IAEJC,gBAFI;IAGJC,6BAHI;IAIJZ,YAJI;IAKJa,UALI;IAMJC;EANI,IAOFrB,oBAAoB,CAAC;IACvBW,kBADuB;IAEvBC,SAFuB;IAGvBC,YAHuB;IAIvBN,YAAY,EAAEC;EAJS,CAAD,CAPxB;EAaA,MAAMc,qBAAqB,GAAGrB,sBAAsB,CAAC;IACnDS;EADmD,CAAD,CAApD;EAGA,MAAMa,YAAY,GAAGxB,OAAO,CAAC,OAAO;IAClCa,SADkC;IAElCQ,UAAU,EAAEA,UAAU,IAAIJ,iBAFQ;IAGlCD,UAAU,EAAEC,iBAHsB;IAIlCT,YAJkC;IAKlCE,OALkC;IAMlCQ,sBANkC;IAOlCJ,YAPkC;IAQlCK,gBARkC;IASlCC,6BATkC;IAUlCE,eAVkC;IAWlCV,kBAXkC;IAYlCG;EAZkC,CAAP,CAAD,EAaxB,CAACF,SAAD,EAAYQ,UAAZ,EAAwBJ,iBAAxB,EAA2CT,YAA3C,EAAyDE,OAAzD,EAAkEQ,sBAAlE,EAA0FJ,YAA1F,EAAwGK,gBAAxG,EAA0HC,6BAA1H,EAAyJE,eAAzJ,EAA0KV,kBAA1K,EAA8LG,SAA9L,CAbwB,CAA5B;EAcA,MAAMU,eAAe,GAAGzB,OAAO,CAAC,OAAO;IACrCgB,UAAU,EAAEC,iBADyB;IAErCI,UAAU,EAAEA,UAAU,IAAIJ,iBAFW;IAGrCF;EAHqC,CAAP,CAAD,EAI3B,CAACA,SAAD,EAAYM,UAAZ,EAAwBJ,iBAAxB,CAJ2B,CAA/B;EAKA,OAAO,aAAalB,KAAK,CAAC2B,aAAN,CAAoBvB,YAAY,CAACwB,QAAjC,EAA2C;IAC7DC,KAAK,EAAEJ;EADsD,CAA3C,EAEjB,aAAazB,KAAK,CAAC2B,aAAN,CAAoBtB,eAAe,CAACuB,QAApC,EAA8C;IAC5DC,KAAK,EAAEH;EADqD,CAA9C,EAEb,aAAa1B,KAAK,CAAC2B,aAAN,CAAoBrB,2BAA2B,CAACsB,QAAhD,EAA0D;IACxEC,KAAK,EAAEL;EADiE,CAA1D,EAEbhB,QAFa,CAFA,CAFI,CAApB;AAOD;;AAED,SAASD,aAAT"},"metadata":{},"sourceType":"module"}