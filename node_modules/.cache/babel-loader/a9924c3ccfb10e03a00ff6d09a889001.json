{"ast":null,"code":"import { clamp } from '../../../../utilities/clamp.js';\nconst VERTICAL_PADDING = 13;\n\nfunction calculateDraggerY(alpha, sliderHeight, draggerHeight) {\n  const offset = offsetForAlpha(alpha, sliderHeight, draggerHeight);\n  return clamp(offset, 0, sliderHeight);\n}\n\nfunction alphaForDraggerY(y, sliderHeight) {\n  const offsetY = clamp(y, 0, sliderHeight);\n  return alphaForOffset(offsetY, sliderHeight);\n}\n\nfunction alphaForOffset(offset, sliderHeight) {\n  const selectionHeight = offset - VERTICAL_PADDING;\n  const slidableArea = sliderHeight - VERTICAL_PADDING * 2;\n  return clamp(1 - selectionHeight / slidableArea, 0, 1);\n}\n\nfunction offsetForAlpha(alpha, sliderHeight, draggerHeight) {\n  const slidableArea = sliderHeight - (draggerHeight + VERTICAL_PADDING);\n  return clamp((1 - alpha) * slidableArea + VERTICAL_PADDING, 0, sliderHeight - draggerHeight);\n}\n\nexport { alphaForDraggerY, alphaForOffset, calculateDraggerY };","map":{"version":3,"names":["clamp","VERTICAL_PADDING","calculateDraggerY","alpha","sliderHeight","draggerHeight","offset","offsetForAlpha","alphaForDraggerY","y","offsetY","alphaForOffset","selectionHeight","slidableArea"],"sources":["/home/cedcoss/react/After interview/polarisdashoboard/node_modules/@shopify/polaris/build/esm/components/ColorPicker/components/AlphaPicker/utilities.js"],"sourcesContent":["import { clamp } from '../../../../utilities/clamp.js';\n\nconst VERTICAL_PADDING = 13;\nfunction calculateDraggerY(alpha, sliderHeight, draggerHeight) {\n  const offset = offsetForAlpha(alpha, sliderHeight, draggerHeight);\n  return clamp(offset, 0, sliderHeight);\n}\nfunction alphaForDraggerY(y, sliderHeight) {\n  const offsetY = clamp(y, 0, sliderHeight);\n  return alphaForOffset(offsetY, sliderHeight);\n}\nfunction alphaForOffset(offset, sliderHeight) {\n  const selectionHeight = offset - VERTICAL_PADDING;\n  const slidableArea = sliderHeight - VERTICAL_PADDING * 2;\n  return clamp(1 - selectionHeight / slidableArea, 0, 1);\n}\n\nfunction offsetForAlpha(alpha, sliderHeight, draggerHeight) {\n  const slidableArea = sliderHeight - (draggerHeight + VERTICAL_PADDING);\n  return clamp((1 - alpha) * slidableArea + VERTICAL_PADDING, 0, sliderHeight - draggerHeight);\n}\n\nexport { alphaForDraggerY, alphaForOffset, calculateDraggerY };\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gCAAtB;AAEA,MAAMC,gBAAgB,GAAG,EAAzB;;AACA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkCC,YAAlC,EAAgDC,aAAhD,EAA+D;EAC7D,MAAMC,MAAM,GAAGC,cAAc,CAACJ,KAAD,EAAQC,YAAR,EAAsBC,aAAtB,CAA7B;EACA,OAAOL,KAAK,CAACM,MAAD,EAAS,CAAT,EAAYF,YAAZ,CAAZ;AACD;;AACD,SAASI,gBAAT,CAA0BC,CAA1B,EAA6BL,YAA7B,EAA2C;EACzC,MAAMM,OAAO,GAAGV,KAAK,CAACS,CAAD,EAAI,CAAJ,EAAOL,YAAP,CAArB;EACA,OAAOO,cAAc,CAACD,OAAD,EAAUN,YAAV,CAArB;AACD;;AACD,SAASO,cAAT,CAAwBL,MAAxB,EAAgCF,YAAhC,EAA8C;EAC5C,MAAMQ,eAAe,GAAGN,MAAM,GAAGL,gBAAjC;EACA,MAAMY,YAAY,GAAGT,YAAY,GAAGH,gBAAgB,GAAG,CAAvD;EACA,OAAOD,KAAK,CAAC,IAAIY,eAAe,GAAGC,YAAvB,EAAqC,CAArC,EAAwC,CAAxC,CAAZ;AACD;;AAED,SAASN,cAAT,CAAwBJ,KAAxB,EAA+BC,YAA/B,EAA6CC,aAA7C,EAA4D;EAC1D,MAAMQ,YAAY,GAAGT,YAAY,IAAIC,aAAa,GAAGJ,gBAApB,CAAjC;EACA,OAAOD,KAAK,CAAC,CAAC,IAAIG,KAAL,IAAcU,YAAd,GAA6BZ,gBAA9B,EAAgD,CAAhD,EAAmDG,YAAY,GAAGC,aAAlE,CAAZ;AACD;;AAED,SAASG,gBAAT,EAA2BG,cAA3B,EAA2CT,iBAA3C"},"metadata":{},"sourceType":"module"}