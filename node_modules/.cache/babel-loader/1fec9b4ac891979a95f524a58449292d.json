{"ast":null,"code":"import { get } from '../get.js';\nimport { merge } from '../merge.js';\nconst REPLACE_REGEX = /{([^}]*)}/g;\n\nclass I18n {\n  /**\n   * @param translation A locale object or array of locale objects that overrides default translations. If specifying an array then your desired language dictionary should come first, followed by your fallback language dictionaries\n   */\n  constructor(translation) {\n    this.translation = {}; // slice the array to make a shallow copy of it, so we don't accidentally\n    // modify the original translation array\n\n    this.translation = Array.isArray(translation) ? merge(...translation.slice().reverse()) : translation;\n  }\n\n  translate(id, replacements) {\n    const text = get(this.translation, id, '');\n\n    if (!text) {\n      return '';\n    }\n\n    if (replacements) {\n      return text.replace(REPLACE_REGEX, match => {\n        const replacement = match.substring(1, match.length - 1);\n\n        if (replacements[replacement] === undefined) {\n          const replacementData = JSON.stringify(replacements);\n          throw new Error(`Error in translation for key '${id}'. No replacement found for key '${replacement}'. The following replacements were passed: '${replacementData}'`);\n        } // This could be a string or a number, but JS doesn't mind which it gets\n        // and can handle that cast internally. So let it, to save us calling\n        // toString() on what's already a string in 90% of cases.\n\n\n        return replacements[replacement];\n      });\n    }\n\n    return text;\n  }\n\n  translationKeyExists(path) {\n    return Boolean(get(this.translation, path));\n  }\n\n}\n\nexport { I18n };","map":{"version":3,"names":["get","merge","REPLACE_REGEX","I18n","constructor","translation","Array","isArray","slice","reverse","translate","id","replacements","text","replace","match","replacement","substring","length","undefined","replacementData","JSON","stringify","Error","translationKeyExists","path","Boolean"],"sources":["/home/cedcoss/react/After interview/polarisdashoboard/node_modules/@shopify/polaris/build/esm/utilities/i18n/I18n.js"],"sourcesContent":["import { get } from '../get.js';\nimport { merge } from '../merge.js';\n\nconst REPLACE_REGEX = /{([^}]*)}/g;\nclass I18n {\n  /**\n   * @param translation A locale object or array of locale objects that overrides default translations. If specifying an array then your desired language dictionary should come first, followed by your fallback language dictionaries\n   */\n  constructor(translation) {\n    this.translation = {};\n    // slice the array to make a shallow copy of it, so we don't accidentally\n    // modify the original translation array\n    this.translation = Array.isArray(translation) ? merge(...translation.slice().reverse()) : translation;\n  }\n\n  translate(id, replacements) {\n    const text = get(this.translation, id, '');\n\n    if (!text) {\n      return '';\n    }\n\n    if (replacements) {\n      return text.replace(REPLACE_REGEX, match => {\n        const replacement = match.substring(1, match.length - 1);\n\n        if (replacements[replacement] === undefined) {\n          const replacementData = JSON.stringify(replacements);\n          throw new Error(`Error in translation for key '${id}'. No replacement found for key '${replacement}'. The following replacements were passed: '${replacementData}'`);\n        } // This could be a string or a number, but JS doesn't mind which it gets\n        // and can handle that cast internally. So let it, to save us calling\n        // toString() on what's already a string in 90% of cases.\n\n\n        return replacements[replacement];\n      });\n    }\n\n    return text;\n  }\n\n  translationKeyExists(path) {\n    return Boolean(get(this.translation, path));\n  }\n\n}\n\nexport { I18n };\n"],"mappings":"AAAA,SAASA,GAAT,QAAoB,WAApB;AACA,SAASC,KAAT,QAAsB,aAAtB;AAEA,MAAMC,aAAa,GAAG,YAAtB;;AACA,MAAMC,IAAN,CAAW;EACT;AACF;AACA;EACEC,WAAW,CAACC,WAAD,EAAc;IACvB,KAAKA,WAAL,GAAmB,EAAnB,CADuB,CAEvB;IACA;;IACA,KAAKA,WAAL,GAAmBC,KAAK,CAACC,OAAN,CAAcF,WAAd,IAA6BJ,KAAK,CAAC,GAAGI,WAAW,CAACG,KAAZ,GAAoBC,OAApB,EAAJ,CAAlC,GAAuEJ,WAA1F;EACD;;EAEDK,SAAS,CAACC,EAAD,EAAKC,YAAL,EAAmB;IAC1B,MAAMC,IAAI,GAAGb,GAAG,CAAC,KAAKK,WAAN,EAAmBM,EAAnB,EAAuB,EAAvB,CAAhB;;IAEA,IAAI,CAACE,IAAL,EAAW;MACT,OAAO,EAAP;IACD;;IAED,IAAID,YAAJ,EAAkB;MAChB,OAAOC,IAAI,CAACC,OAAL,CAAaZ,aAAb,EAA4Ba,KAAK,IAAI;QAC1C,MAAMC,WAAW,GAAGD,KAAK,CAACE,SAAN,CAAgB,CAAhB,EAAmBF,KAAK,CAACG,MAAN,GAAe,CAAlC,CAApB;;QAEA,IAAIN,YAAY,CAACI,WAAD,CAAZ,KAA8BG,SAAlC,EAA6C;UAC3C,MAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeV,YAAf,CAAxB;UACA,MAAM,IAAIW,KAAJ,CAAW,iCAAgCZ,EAAG,oCAAmCK,WAAY,+CAA8CI,eAAgB,GAA3J,CAAN;QACD,CANyC,CAMxC;QACF;QACA;;;QAGA,OAAOR,YAAY,CAACI,WAAD,CAAnB;MACD,CAZM,CAAP;IAaD;;IAED,OAAOH,IAAP;EACD;;EAEDW,oBAAoB,CAACC,IAAD,EAAO;IACzB,OAAOC,OAAO,CAAC1B,GAAG,CAAC,KAAKK,WAAN,EAAmBoB,IAAnB,CAAJ,CAAd;EACD;;AAvCQ;;AA2CX,SAAStB,IAAT"},"metadata":{},"sourceType":"module"}