{"ast":null,"code":"import React, { useState, useRef, useEffect, useCallback, Children, useMemo } from 'react';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { Key } from '../../types.js';\nimport { scrollable } from '../shared.js';\nimport styles from './Listbox.scss.js';\nimport { useComboboxListbox } from '../../utilities/combobox/hooks.js';\nimport { scrollOptionIntoView } from '../../utilities/listbox/utilities.js';\nimport { ListboxContext, WithinListboxContext } from '../../utilities/listbox/context.js';\nimport { TextOption } from './components/TextOption/TextOption.js';\nimport { Loading } from './components/Loading/Loading.js';\nimport { Section } from './components/Section/Section.js';\nimport { Header } from './components/Header/Header.js';\nimport { Action } from './components/Action/Action.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { KeypressListener } from '../KeypressListener/KeypressListener.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { Option } from './components/Option/Option.js';\nlet AutoSelection;\n\n(function (AutoSelection) {\n  AutoSelection[\"FirstSelected\"] = \"FIRST_SELECTED\";\n  AutoSelection[\"First\"] = \"FIRST\";\n  AutoSelection[\"None\"] = \"NONE\";\n})(AutoSelection || (AutoSelection = {}));\n\nconst OPTION_SELECTOR = '[data-listbox-option]';\nconst OPTION_VALUE_ATTRIBUTE = 'data-listbox-option-value';\nconst OPTION_ACTION_ATTRIBUTE = 'data-listbox-option-action';\nconst OPTION_FOCUS_ATTRIBUTE = 'data-focused';\n\nfunction Listbox(_ref) {\n  let {\n    children,\n    autoSelection = AutoSelection.FirstSelected,\n    enableKeyboardControl,\n    accessibilityLabel,\n    customListId,\n    onSelect,\n    onActiveOptionChange\n  } = _ref;\n  const [loading, setLoading] = useState();\n  const [activeOption, setActiveOption] = useState();\n  const [lazyLoading, setLazyLoading] = useState(false);\n  const [currentOptions, setCurrentOptions] = useState([]);\n  const {\n    value: keyboardEventsEnabled,\n    setTrue: enableKeyboardEvents,\n    setFalse: disableKeyboardEvents\n  } = useToggle(Boolean(enableKeyboardControl));\n  const uniqueId = useUniqueId('Listbox');\n  const listId = customListId || uniqueId;\n  const scrollableRef = useRef(null);\n  const listboxRef = useRef(null);\n  const {\n    listboxId,\n    textFieldLabelId,\n    textFieldFocused,\n    willLoadMoreOptions,\n    setActiveOptionId,\n    setListboxId,\n    onOptionSelected,\n    onKeyToBottom\n  } = useComboboxListbox();\n  const inCombobox = Boolean(setActiveOptionId);\n  useEffect(() => {\n    if (setListboxId && !listboxId) {\n      setListboxId(listId);\n    }\n  }, [setListboxId, listboxId, listId]);\n  const getNavigableOptions = useCallback(() => {\n    if (!listboxRef.current) {\n      return [];\n    }\n\n    return [...new Set(listboxRef.current.querySelectorAll(OPTION_SELECTOR))];\n  }, []);\n  const getFirstNavigableOption = useCallback(currentOptions => {\n    const hasSelectedOptions = currentOptions.some(option => option.getAttribute('aria-selected') === 'true');\n    let elementIndex = 0;\n    const element = currentOptions.find((option, index) => {\n      const isInteractable = option.getAttribute('aria-disabled') !== 'true';\n      let isFirstNavigableOption;\n\n      if (hasSelectedOptions && autoSelection === AutoSelection.FirstSelected) {\n        const isSelected = option.getAttribute('aria-selected') === 'true';\n        isFirstNavigableOption = isSelected && isInteractable;\n      } else {\n        isFirstNavigableOption = isInteractable;\n      }\n\n      if (isFirstNavigableOption) elementIndex = index;\n      return isFirstNavigableOption;\n    });\n    if (!element) return;\n    return {\n      element,\n      index: elementIndex\n    };\n  }, [autoSelection]);\n  const handleScrollIntoView = useCallback(option => {\n    const {\n      current: scrollable\n    } = scrollableRef;\n\n    if (scrollable) {\n      scrollOptionIntoView(option.element, scrollable);\n    }\n  }, []);\n  const handleScrollIntoViewDebounced = debounce(handleScrollIntoView, 50);\n  const handleKeyToBottom = useCallback(() => {\n    if (onKeyToBottom) {\n      setLazyLoading(true);\n      return Promise.resolve(onKeyToBottom());\n    }\n  }, [onKeyToBottom]);\n  const handleChangeActiveOption = useCallback(nextOption => {\n    if (!nextOption) return setActiveOption(undefined);\n    activeOption === null || activeOption === void 0 ? void 0 : activeOption.element.removeAttribute(OPTION_FOCUS_ATTRIBUTE);\n    nextOption.element.setAttribute(OPTION_FOCUS_ATTRIBUTE, 'true');\n    handleScrollIntoViewDebounced(nextOption);\n    setActiveOption(nextOption);\n    setActiveOptionId === null || setActiveOptionId === void 0 ? void 0 : setActiveOptionId(nextOption.domId);\n    onActiveOptionChange === null || onActiveOptionChange === void 0 ? void 0 : onActiveOptionChange(nextOption.value, nextOption.domId);\n  }, [activeOption, setActiveOptionId, onActiveOptionChange, handleScrollIntoViewDebounced]);\n  const getFormattedOption = useCallback((element, index) => {\n    return {\n      element,\n      index,\n      domId: element.id,\n      value: element.getAttribute(OPTION_VALUE_ATTRIBUTE) || '',\n      disabled: element.getAttribute('aria-disabled') === 'true',\n      isAction: element.getAttribute(OPTION_ACTION_ATTRIBUTE) === 'true'\n    };\n  }, []);\n  const resetActiveOption = useCallback(() => {\n    var _nextOption, _nextOption2, _nextOption3;\n\n    let nextOption;\n    const nextOptions = getNavigableOptions();\n    const nextActiveOption = getFirstNavigableOption(nextOptions);\n\n    if (nextOptions.length === 0 && currentOptions.length > 0) {\n      setCurrentOptions(nextOptions);\n      handleChangeActiveOption();\n      return;\n    }\n\n    if (nextActiveOption) {\n      const {\n        element,\n        index\n      } = nextActiveOption;\n      nextOption = getFormattedOption(element, index);\n    }\n\n    const optionIsAlreadyActive = activeOption !== undefined && ((_nextOption = nextOption) === null || _nextOption === void 0 ? void 0 : _nextOption.domId) === (activeOption === null || activeOption === void 0 ? void 0 : activeOption.domId);\n    const actionContentHasUpdated = (activeOption === null || activeOption === void 0 ? void 0 : activeOption.isAction) && ((_nextOption2 = nextOption) === null || _nextOption2 === void 0 ? void 0 : _nextOption2.isAction) && ((_nextOption3 = nextOption) === null || _nextOption3 === void 0 ? void 0 : _nextOption3.value) !== (activeOption === null || activeOption === void 0 ? void 0 : activeOption.value);\n    const currentValues = currentOptions.map(option => option.getAttribute(OPTION_VALUE_ATTRIBUTE));\n    const nextValues = nextOptions.map(option => option.getAttribute(OPTION_VALUE_ATTRIBUTE));\n    const listIsUnchanged = nextValues.length === currentValues.length && nextValues.every((value, index) => {\n      return currentValues[index] === value;\n    });\n    const listIsAppended = currentValues.length !== 0 && nextValues.length > currentValues.length && currentValues.every((value, index) => {\n      return nextValues[index] === value;\n    });\n\n    if (listIsUnchanged) {\n      if (optionIsAlreadyActive && actionContentHasUpdated) {\n        setCurrentOptions(nextOptions);\n        handleChangeActiveOption(nextOption);\n      }\n\n      return;\n    }\n\n    if (listIsAppended) {\n      setCurrentOptions(nextOptions);\n      return;\n    }\n\n    setCurrentOptions(nextOptions);\n\n    if (lazyLoading) {\n      setLazyLoading(false);\n      return;\n    }\n\n    handleChangeActiveOption(nextOption);\n  }, [lazyLoading, currentOptions, activeOption, getFirstNavigableOption, getNavigableOptions, getFormattedOption, handleChangeActiveOption]);\n  useEffect(() => {\n    if (autoSelection !== AutoSelection.None && !loading && children && Children.count(children) > 0) {\n      resetActiveOption();\n    }\n  }, [children, autoSelection, activeOption, loading, resetActiveOption]);\n  useEffect(() => {\n    if (listboxRef.current) {\n      scrollableRef.current = listboxRef.current.closest(scrollable.selector);\n    }\n  }, []);\n  useEffect(() => {\n    if (enableKeyboardControl && !keyboardEventsEnabled) {\n      enableKeyboardEvents();\n    }\n  }, [enableKeyboardControl, keyboardEventsEnabled, enableKeyboardEvents]);\n  const onOptionSelect = useCallback(option => {\n    handleChangeActiveOption(option);\n    if (onOptionSelected) onOptionSelected();\n    if (onSelect) onSelect(option.value);\n  }, [handleChangeActiveOption, onSelect, onOptionSelected]);\n  const getNextIndex = useCallback((currentIndex, lastIndex, direction) => {\n    let nextIndex;\n\n    if (direction === 'down') {\n      if (currentIndex === lastIndex) {\n        nextIndex = willLoadMoreOptions ? currentIndex + 1 : 0;\n      } else {\n        nextIndex = currentIndex + 1;\n      }\n    } else {\n      nextIndex = currentIndex === 0 ? lastIndex : currentIndex - 1;\n    }\n\n    return nextIndex;\n  }, [willLoadMoreOptions]);\n  const getNextValidOption = useCallback(async key => {\n    const lastIndex = currentOptions.length - 1;\n    let currentIndex = (activeOption === null || activeOption === void 0 ? void 0 : activeOption.index) || 0;\n    let nextIndex = 0;\n    let element = activeOption === null || activeOption === void 0 ? void 0 : activeOption.element;\n    let totalOptions = -1;\n\n    if (!activeOption && autoSelection === AutoSelection.None) {\n      const nextOptions = getNavigableOptions();\n      const nextActiveOption = getFirstNavigableOption(nextOptions);\n      setCurrentOptions(nextOptions);\n      return {\n        element: nextActiveOption === null || nextActiveOption === void 0 ? void 0 : nextActiveOption.element,\n        nextIndex: (nextActiveOption === null || nextActiveOption === void 0 ? void 0 : nextActiveOption.index) || 0\n      };\n    }\n\n    while (totalOptions++ < lastIndex) {\n      var _element;\n\n      nextIndex = getNextIndex(currentIndex, lastIndex, key);\n      element = currentOptions[nextIndex];\n      const triggerLazyLoad = nextIndex >= lastIndex;\n      const isDisabled = ((_element = element) === null || _element === void 0 ? void 0 : _element.getAttribute('aria-disabled')) === 'true';\n\n      if (triggerLazyLoad && willLoadMoreOptions) {\n        await handleKeyToBottom();\n      }\n\n      if (isDisabled) {\n        currentIndex = nextIndex;\n        element = undefined;\n        continue;\n      }\n\n      break;\n    }\n\n    return {\n      element,\n      nextIndex\n    };\n  }, [autoSelection, currentOptions, activeOption, willLoadMoreOptions, getNextIndex, handleKeyToBottom, getFirstNavigableOption, getNavigableOptions]);\n  const handleArrow = useCallback(async (type, event) => {\n    event.preventDefault();\n    const {\n      element,\n      nextIndex\n    } = await getNextValidOption(type);\n    if (!element) return;\n    const nextOption = getFormattedOption(element, nextIndex);\n    handleChangeActiveOption(nextOption);\n  }, [getFormattedOption, getNextValidOption, handleChangeActiveOption]);\n  const handleDownArrow = useCallback(event => {\n    handleArrow('down', event);\n  }, [handleArrow]);\n  const handleUpArrow = useCallback(event => {\n    handleArrow('up', event);\n  }, [handleArrow]);\n  const handleEnter = useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (activeOption) {\n      onOptionSelect(activeOption);\n    }\n  }, [activeOption, onOptionSelect]);\n  const handleFocus = useCallback(() => {\n    if (enableKeyboardControl) return;\n    enableKeyboardEvents();\n  }, [enableKeyboardControl, enableKeyboardEvents]);\n  const handleBlur = useCallback(event => {\n    event.stopPropagation();\n\n    if (keyboardEventsEnabled) {\n      const nextActiveOption = getFirstNavigableOption(currentOptions);\n\n      if (nextActiveOption) {\n        const {\n          element,\n          index\n        } = nextActiveOption;\n        const nextOption = getFormattedOption(element, index);\n        handleChangeActiveOption(nextOption);\n      }\n    }\n\n    if (enableKeyboardControl) return;\n    disableKeyboardEvents();\n  }, [enableKeyboardControl, currentOptions, keyboardEventsEnabled, disableKeyboardEvents, getFirstNavigableOption, getFormattedOption, handleChangeActiveOption]);\n  const listeners = keyboardEventsEnabled || textFieldFocused ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(KeypressListener, {\n    keyEvent: \"keydown\",\n    keyCode: Key.DownArrow,\n    handler: handleDownArrow\n  }), /*#__PURE__*/React.createElement(KeypressListener, {\n    keyEvent: \"keydown\",\n    keyCode: Key.UpArrow,\n    handler: handleUpArrow\n  }), /*#__PURE__*/React.createElement(KeypressListener, {\n    keyEvent: \"keydown\",\n    keyCode: Key.Enter,\n    handler: handleEnter\n  })) : null;\n  const listboxContext = useMemo(() => ({\n    onOptionSelect,\n    setLoading\n  }), [onOptionSelect]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, listeners, /*#__PURE__*/React.createElement(VisuallyHidden, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-live\": \"polite\"\n  }, loading ? loading : null)), /*#__PURE__*/React.createElement(ListboxContext.Provider, {\n    value: listboxContext\n  }, /*#__PURE__*/React.createElement(WithinListboxContext.Provider, {\n    value: true\n  }, children ? /*#__PURE__*/React.createElement(\"ul\", {\n    tabIndex: 0,\n    role: \"listbox\",\n    className: styles.Listbox,\n    \"aria-label\": inCombobox ? undefined : accessibilityLabel,\n    \"aria-labelledby\": textFieldLabelId,\n    \"aria-busy\": Boolean(loading),\n    \"aria-activedescendant\": activeOption && activeOption.domId,\n    id: listId,\n    onFocus: inCombobox ? undefined : handleFocus,\n    onBlur: inCombobox ? undefined : handleBlur,\n    ref: listboxRef\n  }, children) : null)));\n}\n\nListbox.Option = Option;\nListbox.TextOption = TextOption;\nListbox.Loading = Loading;\nListbox.Section = Section;\nListbox.Header = Header;\nListbox.Action = Action;\nexport { AutoSelection, Listbox };","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","Children","useMemo","debounce","useToggle","Key","scrollable","styles","useComboboxListbox","scrollOptionIntoView","ListboxContext","WithinListboxContext","TextOption","Loading","Section","Header","Action","useUniqueId","KeypressListener","VisuallyHidden","Option","AutoSelection","OPTION_SELECTOR","OPTION_VALUE_ATTRIBUTE","OPTION_ACTION_ATTRIBUTE","OPTION_FOCUS_ATTRIBUTE","Listbox","children","autoSelection","FirstSelected","enableKeyboardControl","accessibilityLabel","customListId","onSelect","onActiveOptionChange","loading","setLoading","activeOption","setActiveOption","lazyLoading","setLazyLoading","currentOptions","setCurrentOptions","value","keyboardEventsEnabled","setTrue","enableKeyboardEvents","setFalse","disableKeyboardEvents","Boolean","uniqueId","listId","scrollableRef","listboxRef","listboxId","textFieldLabelId","textFieldFocused","willLoadMoreOptions","setActiveOptionId","setListboxId","onOptionSelected","onKeyToBottom","inCombobox","getNavigableOptions","current","Set","querySelectorAll","getFirstNavigableOption","hasSelectedOptions","some","option","getAttribute","elementIndex","element","find","index","isInteractable","isFirstNavigableOption","isSelected","handleScrollIntoView","handleScrollIntoViewDebounced","handleKeyToBottom","Promise","resolve","handleChangeActiveOption","nextOption","undefined","removeAttribute","setAttribute","domId","getFormattedOption","id","disabled","isAction","resetActiveOption","_nextOption","_nextOption2","_nextOption3","nextOptions","nextActiveOption","length","optionIsAlreadyActive","actionContentHasUpdated","currentValues","map","nextValues","listIsUnchanged","every","listIsAppended","None","count","closest","selector","onOptionSelect","getNextIndex","currentIndex","lastIndex","direction","nextIndex","getNextValidOption","key","totalOptions","_element","triggerLazyLoad","isDisabled","handleArrow","type","event","preventDefault","handleDownArrow","handleUpArrow","handleEnter","stopPropagation","handleFocus","handleBlur","listeners","createElement","Fragment","keyEvent","keyCode","DownArrow","handler","UpArrow","Enter","listboxContext","Provider","tabIndex","role","className","onFocus","onBlur","ref"],"sources":["/home/cedcoss/react/After interview/polarisdashoboard/node_modules/@shopify/polaris/build/esm/components/Listbox/Listbox.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, Children, useMemo } from 'react';\nimport { debounce } from '../../utilities/debounce.js';\nimport { useToggle } from '../../utilities/use-toggle.js';\nimport { Key } from '../../types.js';\nimport { scrollable } from '../shared.js';\nimport styles from './Listbox.scss.js';\nimport { useComboboxListbox } from '../../utilities/combobox/hooks.js';\nimport { scrollOptionIntoView } from '../../utilities/listbox/utilities.js';\nimport { ListboxContext, WithinListboxContext } from '../../utilities/listbox/context.js';\nimport { TextOption } from './components/TextOption/TextOption.js';\nimport { Loading } from './components/Loading/Loading.js';\nimport { Section } from './components/Section/Section.js';\nimport { Header } from './components/Header/Header.js';\nimport { Action } from './components/Action/Action.js';\nimport { useUniqueId } from '../../utilities/unique-id/hooks.js';\nimport { KeypressListener } from '../KeypressListener/KeypressListener.js';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.js';\nimport { Option } from './components/Option/Option.js';\n\nlet AutoSelection;\n\n(function (AutoSelection) {\n  AutoSelection[\"FirstSelected\"] = \"FIRST_SELECTED\";\n  AutoSelection[\"First\"] = \"FIRST\";\n  AutoSelection[\"None\"] = \"NONE\";\n})(AutoSelection || (AutoSelection = {}));\n\nconst OPTION_SELECTOR = '[data-listbox-option]';\nconst OPTION_VALUE_ATTRIBUTE = 'data-listbox-option-value';\nconst OPTION_ACTION_ATTRIBUTE = 'data-listbox-option-action';\nconst OPTION_FOCUS_ATTRIBUTE = 'data-focused';\nfunction Listbox({\n  children,\n  autoSelection = AutoSelection.FirstSelected,\n  enableKeyboardControl,\n  accessibilityLabel,\n  customListId,\n  onSelect,\n  onActiveOptionChange\n}) {\n  const [loading, setLoading] = useState();\n  const [activeOption, setActiveOption] = useState();\n  const [lazyLoading, setLazyLoading] = useState(false);\n  const [currentOptions, setCurrentOptions] = useState([]);\n  const {\n    value: keyboardEventsEnabled,\n    setTrue: enableKeyboardEvents,\n    setFalse: disableKeyboardEvents\n  } = useToggle(Boolean(enableKeyboardControl));\n  const uniqueId = useUniqueId('Listbox');\n  const listId = customListId || uniqueId;\n  const scrollableRef = useRef(null);\n  const listboxRef = useRef(null);\n  const {\n    listboxId,\n    textFieldLabelId,\n    textFieldFocused,\n    willLoadMoreOptions,\n    setActiveOptionId,\n    setListboxId,\n    onOptionSelected,\n    onKeyToBottom\n  } = useComboboxListbox();\n  const inCombobox = Boolean(setActiveOptionId);\n  useEffect(() => {\n    if (setListboxId && !listboxId) {\n      setListboxId(listId);\n    }\n  }, [setListboxId, listboxId, listId]);\n  const getNavigableOptions = useCallback(() => {\n    if (!listboxRef.current) {\n      return [];\n    }\n\n    return [...new Set(listboxRef.current.querySelectorAll(OPTION_SELECTOR))];\n  }, []);\n  const getFirstNavigableOption = useCallback(currentOptions => {\n    const hasSelectedOptions = currentOptions.some(option => option.getAttribute('aria-selected') === 'true');\n    let elementIndex = 0;\n    const element = currentOptions.find((option, index) => {\n      const isInteractable = option.getAttribute('aria-disabled') !== 'true';\n      let isFirstNavigableOption;\n\n      if (hasSelectedOptions && autoSelection === AutoSelection.FirstSelected) {\n        const isSelected = option.getAttribute('aria-selected') === 'true';\n        isFirstNavigableOption = isSelected && isInteractable;\n      } else {\n        isFirstNavigableOption = isInteractable;\n      }\n\n      if (isFirstNavigableOption) elementIndex = index;\n      return isFirstNavigableOption;\n    });\n    if (!element) return;\n    return {\n      element,\n      index: elementIndex\n    };\n  }, [autoSelection]);\n  const handleScrollIntoView = useCallback(option => {\n    const {\n      current: scrollable\n    } = scrollableRef;\n\n    if (scrollable) {\n      scrollOptionIntoView(option.element, scrollable);\n    }\n  }, []);\n  const handleScrollIntoViewDebounced = debounce(handleScrollIntoView, 50);\n  const handleKeyToBottom = useCallback(() => {\n    if (onKeyToBottom) {\n      setLazyLoading(true);\n      return Promise.resolve(onKeyToBottom());\n    }\n  }, [onKeyToBottom]);\n  const handleChangeActiveOption = useCallback(nextOption => {\n    if (!nextOption) return setActiveOption(undefined);\n    activeOption === null || activeOption === void 0 ? void 0 : activeOption.element.removeAttribute(OPTION_FOCUS_ATTRIBUTE);\n    nextOption.element.setAttribute(OPTION_FOCUS_ATTRIBUTE, 'true');\n    handleScrollIntoViewDebounced(nextOption);\n    setActiveOption(nextOption);\n    setActiveOptionId === null || setActiveOptionId === void 0 ? void 0 : setActiveOptionId(nextOption.domId);\n    onActiveOptionChange === null || onActiveOptionChange === void 0 ? void 0 : onActiveOptionChange(nextOption.value, nextOption.domId);\n  }, [activeOption, setActiveOptionId, onActiveOptionChange, handleScrollIntoViewDebounced]);\n  const getFormattedOption = useCallback((element, index) => {\n    return {\n      element,\n      index,\n      domId: element.id,\n      value: element.getAttribute(OPTION_VALUE_ATTRIBUTE) || '',\n      disabled: element.getAttribute('aria-disabled') === 'true',\n      isAction: element.getAttribute(OPTION_ACTION_ATTRIBUTE) === 'true'\n    };\n  }, []);\n  const resetActiveOption = useCallback(() => {\n    var _nextOption, _nextOption2, _nextOption3;\n\n    let nextOption;\n    const nextOptions = getNavigableOptions();\n    const nextActiveOption = getFirstNavigableOption(nextOptions);\n\n    if (nextOptions.length === 0 && currentOptions.length > 0) {\n      setCurrentOptions(nextOptions);\n      handleChangeActiveOption();\n      return;\n    }\n\n    if (nextActiveOption) {\n      const {\n        element,\n        index\n      } = nextActiveOption;\n      nextOption = getFormattedOption(element, index);\n    }\n\n    const optionIsAlreadyActive = activeOption !== undefined && ((_nextOption = nextOption) === null || _nextOption === void 0 ? void 0 : _nextOption.domId) === (activeOption === null || activeOption === void 0 ? void 0 : activeOption.domId);\n    const actionContentHasUpdated = (activeOption === null || activeOption === void 0 ? void 0 : activeOption.isAction) && ((_nextOption2 = nextOption) === null || _nextOption2 === void 0 ? void 0 : _nextOption2.isAction) && ((_nextOption3 = nextOption) === null || _nextOption3 === void 0 ? void 0 : _nextOption3.value) !== (activeOption === null || activeOption === void 0 ? void 0 : activeOption.value);\n    const currentValues = currentOptions.map(option => option.getAttribute(OPTION_VALUE_ATTRIBUTE));\n    const nextValues = nextOptions.map(option => option.getAttribute(OPTION_VALUE_ATTRIBUTE));\n    const listIsUnchanged = nextValues.length === currentValues.length && nextValues.every((value, index) => {\n      return currentValues[index] === value;\n    });\n    const listIsAppended = currentValues.length !== 0 && nextValues.length > currentValues.length && currentValues.every((value, index) => {\n      return nextValues[index] === value;\n    });\n\n    if (listIsUnchanged) {\n      if (optionIsAlreadyActive && actionContentHasUpdated) {\n        setCurrentOptions(nextOptions);\n        handleChangeActiveOption(nextOption);\n      }\n\n      return;\n    }\n\n    if (listIsAppended) {\n      setCurrentOptions(nextOptions);\n      return;\n    }\n\n    setCurrentOptions(nextOptions);\n\n    if (lazyLoading) {\n      setLazyLoading(false);\n      return;\n    }\n\n    handleChangeActiveOption(nextOption);\n  }, [lazyLoading, currentOptions, activeOption, getFirstNavigableOption, getNavigableOptions, getFormattedOption, handleChangeActiveOption]);\n  useEffect(() => {\n    if (autoSelection !== AutoSelection.None && !loading && children && Children.count(children) > 0) {\n      resetActiveOption();\n    }\n  }, [children, autoSelection, activeOption, loading, resetActiveOption]);\n  useEffect(() => {\n    if (listboxRef.current) {\n      scrollableRef.current = listboxRef.current.closest(scrollable.selector);\n    }\n  }, []);\n  useEffect(() => {\n    if (enableKeyboardControl && !keyboardEventsEnabled) {\n      enableKeyboardEvents();\n    }\n  }, [enableKeyboardControl, keyboardEventsEnabled, enableKeyboardEvents]);\n  const onOptionSelect = useCallback(option => {\n    handleChangeActiveOption(option);\n    if (onOptionSelected) onOptionSelected();\n    if (onSelect) onSelect(option.value);\n  }, [handleChangeActiveOption, onSelect, onOptionSelected]);\n  const getNextIndex = useCallback((currentIndex, lastIndex, direction) => {\n    let nextIndex;\n\n    if (direction === 'down') {\n      if (currentIndex === lastIndex) {\n        nextIndex = willLoadMoreOptions ? currentIndex + 1 : 0;\n      } else {\n        nextIndex = currentIndex + 1;\n      }\n    } else {\n      nextIndex = currentIndex === 0 ? lastIndex : currentIndex - 1;\n    }\n\n    return nextIndex;\n  }, [willLoadMoreOptions]);\n  const getNextValidOption = useCallback(async key => {\n    const lastIndex = currentOptions.length - 1;\n    let currentIndex = (activeOption === null || activeOption === void 0 ? void 0 : activeOption.index) || 0;\n    let nextIndex = 0;\n    let element = activeOption === null || activeOption === void 0 ? void 0 : activeOption.element;\n    let totalOptions = -1;\n\n    if (!activeOption && autoSelection === AutoSelection.None) {\n      const nextOptions = getNavigableOptions();\n      const nextActiveOption = getFirstNavigableOption(nextOptions);\n      setCurrentOptions(nextOptions);\n      return {\n        element: nextActiveOption === null || nextActiveOption === void 0 ? void 0 : nextActiveOption.element,\n        nextIndex: (nextActiveOption === null || nextActiveOption === void 0 ? void 0 : nextActiveOption.index) || 0\n      };\n    }\n\n    while (totalOptions++ < lastIndex) {\n      var _element;\n\n      nextIndex = getNextIndex(currentIndex, lastIndex, key);\n      element = currentOptions[nextIndex];\n      const triggerLazyLoad = nextIndex >= lastIndex;\n      const isDisabled = ((_element = element) === null || _element === void 0 ? void 0 : _element.getAttribute('aria-disabled')) === 'true';\n\n      if (triggerLazyLoad && willLoadMoreOptions) {\n        await handleKeyToBottom();\n      }\n\n      if (isDisabled) {\n        currentIndex = nextIndex;\n        element = undefined;\n        continue;\n      }\n\n      break;\n    }\n\n    return {\n      element,\n      nextIndex\n    };\n  }, [autoSelection, currentOptions, activeOption, willLoadMoreOptions, getNextIndex, handleKeyToBottom, getFirstNavigableOption, getNavigableOptions]);\n  const handleArrow = useCallback(async (type, event) => {\n    event.preventDefault();\n    const {\n      element,\n      nextIndex\n    } = await getNextValidOption(type);\n    if (!element) return;\n    const nextOption = getFormattedOption(element, nextIndex);\n    handleChangeActiveOption(nextOption);\n  }, [getFormattedOption, getNextValidOption, handleChangeActiveOption]);\n  const handleDownArrow = useCallback(event => {\n    handleArrow('down', event);\n  }, [handleArrow]);\n  const handleUpArrow = useCallback(event => {\n    handleArrow('up', event);\n  }, [handleArrow]);\n  const handleEnter = useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (activeOption) {\n      onOptionSelect(activeOption);\n    }\n  }, [activeOption, onOptionSelect]);\n  const handleFocus = useCallback(() => {\n    if (enableKeyboardControl) return;\n    enableKeyboardEvents();\n  }, [enableKeyboardControl, enableKeyboardEvents]);\n  const handleBlur = useCallback(event => {\n    event.stopPropagation();\n\n    if (keyboardEventsEnabled) {\n      const nextActiveOption = getFirstNavigableOption(currentOptions);\n\n      if (nextActiveOption) {\n        const {\n          element,\n          index\n        } = nextActiveOption;\n        const nextOption = getFormattedOption(element, index);\n        handleChangeActiveOption(nextOption);\n      }\n    }\n\n    if (enableKeyboardControl) return;\n    disableKeyboardEvents();\n  }, [enableKeyboardControl, currentOptions, keyboardEventsEnabled, disableKeyboardEvents, getFirstNavigableOption, getFormattedOption, handleChangeActiveOption]);\n  const listeners = keyboardEventsEnabled || textFieldFocused ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(KeypressListener, {\n    keyEvent: \"keydown\",\n    keyCode: Key.DownArrow,\n    handler: handleDownArrow\n  }), /*#__PURE__*/React.createElement(KeypressListener, {\n    keyEvent: \"keydown\",\n    keyCode: Key.UpArrow,\n    handler: handleUpArrow\n  }), /*#__PURE__*/React.createElement(KeypressListener, {\n    keyEvent: \"keydown\",\n    keyCode: Key.Enter,\n    handler: handleEnter\n  })) : null;\n  const listboxContext = useMemo(() => ({\n    onOptionSelect,\n    setLoading\n  }), [onOptionSelect]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, listeners, /*#__PURE__*/React.createElement(VisuallyHidden, null, /*#__PURE__*/React.createElement(\"div\", {\n    \"aria-live\": \"polite\"\n  }, loading ? loading : null)), /*#__PURE__*/React.createElement(ListboxContext.Provider, {\n    value: listboxContext\n  }, /*#__PURE__*/React.createElement(WithinListboxContext.Provider, {\n    value: true\n  }, children ? /*#__PURE__*/React.createElement(\"ul\", {\n    tabIndex: 0,\n    role: \"listbox\",\n    className: styles.Listbox,\n    \"aria-label\": inCombobox ? undefined : accessibilityLabel,\n    \"aria-labelledby\": textFieldLabelId,\n    \"aria-busy\": Boolean(loading),\n    \"aria-activedescendant\": activeOption && activeOption.domId,\n    id: listId,\n    onFocus: inCombobox ? undefined : handleFocus,\n    onBlur: inCombobox ? undefined : handleBlur,\n    ref: listboxRef\n  }, children) : null)));\n}\nListbox.Option = Option;\nListbox.TextOption = TextOption;\nListbox.Loading = Loading;\nListbox.Section = Section;\nListbox.Header = Header;\nListbox.Action = Action;\n\nexport { AutoSelection, Listbox };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}