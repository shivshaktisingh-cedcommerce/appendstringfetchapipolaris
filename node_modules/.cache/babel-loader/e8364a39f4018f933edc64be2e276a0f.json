{"ast":null,"code":"import React, { PureComponent, createRef } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { debounce } from '../../utilities/debounce.js';\nimport { classNames } from '../../utilities/css.js';\nimport { headerCell } from '../shared.js';\nimport { measureColumn, getPrevAndCurrentColumns } from './utilities.js';\nimport styles from './DataTable.scss.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nimport { Navigation } from './components/Navigation/Navigation.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { EventListener } from '../EventListener/EventListener.js';\n\nconst getRowClientHeights = rows => {\n  const heights = [];\n\n  if (!rows) {\n    return heights;\n  }\n\n  rows.forEach(row => {\n    heights.push(row.clientHeight);\n  });\n  return heights;\n};\n\nclass DataTableInner extends PureComponent {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      condensed: false,\n      columnVisibilityData: [],\n      isScrolledFarthestLeft: true,\n      isScrolledFarthestRight: false,\n      rowHovered: undefined\n    };\n    this.dataTable = /*#__PURE__*/createRef();\n    this.scrollContainer = /*#__PURE__*/createRef();\n    this.table = /*#__PURE__*/createRef();\n    this.stickyTable = /*#__PURE__*/createRef();\n    this.stickyNav = null;\n    this.headerNav = null;\n    this.tableHeadings = [];\n    this.stickyHeadings = [];\n    this.tableHeadingWidths = [];\n    this.stickyHeaderActive = false;\n    this.scrollStopTimer = null;\n    this.handleResize = debounce(() => {\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        }\n      } = this;\n      let condensed = false;\n\n      if (table && scrollContainer) {\n        // safari sometimes incorrectly sets the scrollwidth too large by 1px\n        condensed = table.scrollWidth > scrollContainer.clientWidth + 1;\n      }\n\n      this.setState({\n        condensed,\n        ...this.calculateColumnVisibilityData(condensed)\n      });\n    });\n\n    this.setCellRef = _ref => {\n      let {\n        ref,\n        index,\n        inStickyHeader\n      } = _ref;\n\n      if (ref == null) {\n        return;\n      }\n\n      if (inStickyHeader) {\n        this.stickyHeadings[index] = ref;\n        const button = ref.querySelector('button');\n\n        if (button == null) {\n          return;\n        }\n\n        button.addEventListener('focus', this.handleHeaderButtonFocus);\n      } else {\n        this.tableHeadings[index] = ref;\n        this.tableHeadingWidths[index] = ref.clientWidth;\n      }\n    };\n\n    this.changeHeadingFocus = () => {\n      const {\n        tableHeadings,\n        stickyHeadings,\n        stickyNav,\n        headerNav\n      } = this;\n      const stickyFocusedItemIndex = stickyHeadings.findIndex(item => {\n        var _document$activeEleme;\n\n        return item === ((_document$activeEleme = document.activeElement) === null || _document$activeEleme === void 0 ? void 0 : _document$activeEleme.parentElement);\n      });\n      const tableFocusedItemIndex = tableHeadings.findIndex(item => {\n        var _document$activeEleme2;\n\n        return item === ((_document$activeEleme2 = document.activeElement) === null || _document$activeEleme2 === void 0 ? void 0 : _document$activeEleme2.parentElement);\n      });\n      const arrowsInStickyNav = stickyNav === null || stickyNav === void 0 ? void 0 : stickyNav.querySelectorAll('button');\n      const arrowsInHeaderNav = headerNav === null || headerNav === void 0 ? void 0 : headerNav.querySelectorAll('button');\n      let stickyFocusedNavIndex = -1;\n      arrowsInStickyNav === null || arrowsInStickyNav === void 0 ? void 0 : arrowsInStickyNav.forEach((item, index) => {\n        if (item === document.activeElement) {\n          stickyFocusedNavIndex = index;\n        }\n      });\n      let headerFocusedNavIndex = -1;\n      arrowsInHeaderNav === null || arrowsInHeaderNav === void 0 ? void 0 : arrowsInHeaderNav.forEach((item, index) => {\n        if (item === document.activeElement) {\n          headerFocusedNavIndex = index;\n        }\n      });\n\n      if (stickyFocusedItemIndex < 0 && tableFocusedItemIndex < 0 && stickyFocusedNavIndex < 0 && headerFocusedNavIndex < 0) {\n        return null;\n      }\n\n      let button;\n\n      if (stickyFocusedItemIndex >= 0) {\n        button = tableHeadings[stickyFocusedItemIndex].querySelector('button');\n      } else if (tableFocusedItemIndex >= 0) {\n        button = stickyHeadings[tableFocusedItemIndex].querySelector('button');\n      }\n\n      if (stickyFocusedNavIndex >= 0) {\n        button = arrowsInHeaderNav === null || arrowsInHeaderNav === void 0 ? void 0 : arrowsInHeaderNav[stickyFocusedNavIndex];\n      } else if (headerFocusedNavIndex >= 0) {\n        button = arrowsInStickyNav === null || arrowsInStickyNav === void 0 ? void 0 : arrowsInStickyNav[headerFocusedNavIndex];\n      }\n\n      if (button == null) {\n        return null;\n      }\n\n      button.style.visibility = 'visible';\n      button.focus();\n      button.style.removeProperty('visibility');\n    };\n\n    this.calculateColumnVisibilityData = condensed => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        },\n        dataTable: {\n          current: dataTable\n        }\n      } = this;\n      const {\n        stickyHeader\n      } = this.props;\n\n      if ((stickyHeader || condensed) && table && scrollContainer && dataTable) {\n        const headerCells = table.querySelectorAll(headerCell.selector);\n        const rightMostHeader = headerCells[fixedFirstColumns - 1];\n        const nthColumnWidth = fixedFirstColumns ? rightMostHeader.offsetLeft + rightMostHeader.offsetWidth : 0;\n\n        if (headerCells.length > 0) {\n          const firstVisibleColumnIndex = headerCells.length - 1;\n          const tableLeftVisibleEdge = scrollContainer.scrollLeft + nthColumnWidth;\n          const tableRightVisibleEdge = scrollContainer.scrollLeft + dataTable.offsetWidth;\n          const tableData = {\n            firstVisibleColumnIndex,\n            tableLeftVisibleEdge,\n            tableRightVisibleEdge\n          };\n          const columnVisibilityData = [...headerCells].map(measureColumn(tableData));\n          const lastColumn = columnVisibilityData[columnVisibilityData.length - 1];\n          const isScrolledFarthestLeft = fixedFirstColumns ? tableLeftVisibleEdge === nthColumnWidth : tableLeftVisibleEdge === 0;\n          return {\n            columnVisibilityData,\n            ...getPrevAndCurrentColumns(tableData, columnVisibilityData),\n            isScrolledFarthestLeft,\n            isScrolledFarthestRight: lastColumn.rightEdge <= tableRightVisibleEdge\n          };\n        }\n      }\n\n      return {\n        columnVisibilityData: [],\n        previousColumn: undefined,\n        currentColumn: undefined\n      };\n    };\n\n    this.handleHeaderButtonFocus = event => {\n      var _this$state$columnVis;\n\n      const fixedFirstColumns = this.fixedFirstColumns();\n\n      if (this.scrollContainer.current == null || event.target == null || this.state.columnVisibilityData.length === 0) {\n        return;\n      }\n\n      const target = event.target;\n      const currentCell = target.parentNode;\n      const tableScrollLeft = this.scrollContainer.current.scrollLeft;\n      const tableViewableWidth = this.scrollContainer.current.offsetWidth;\n      const tableRightEdge = tableScrollLeft + tableViewableWidth;\n      const nthColumnWidth = this.state.columnVisibilityData.length > 0 ? (_this$state$columnVis = this.state.columnVisibilityData[fixedFirstColumns]) === null || _this$state$columnVis === void 0 ? void 0 : _this$state$columnVis.rightEdge : 0;\n      const currentColumnLeftEdge = currentCell.offsetLeft;\n      const currentColumnRightEdge = currentCell.offsetLeft + currentCell.offsetWidth;\n\n      if (tableScrollLeft > currentColumnLeftEdge - nthColumnWidth) {\n        this.scrollContainer.current.scrollLeft = currentColumnLeftEdge - nthColumnWidth;\n      }\n\n      if (currentColumnRightEdge > tableRightEdge) {\n        this.scrollContainer.current.scrollLeft = currentColumnRightEdge - tableViewableWidth;\n      }\n    };\n\n    this.stickyHeaderScrolling = () => {\n      const {\n        current: stickyTable\n      } = this.stickyTable;\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n\n      if (stickyTable == null || scrollContainer == null) {\n        return;\n      }\n\n      stickyTable.scrollLeft = scrollContainer.scrollLeft;\n    };\n\n    this.scrollListener = () => {\n      var _this$scrollContainer;\n\n      if (this.scrollStopTimer) {\n        clearTimeout(this.scrollStopTimer);\n      }\n\n      this.scrollStopTimer = setTimeout(() => {\n        this.setState(prevState => ({ ...this.calculateColumnVisibilityData(prevState.condensed)\n        }));\n      }, 100);\n      this.setState({\n        isScrolledFarthestLeft: ((_this$scrollContainer = this.scrollContainer.current) === null || _this$scrollContainer === void 0 ? void 0 : _this$scrollContainer.scrollLeft) === 0\n      });\n\n      if (this.props.stickyHeader && this.stickyHeaderActive) {\n        this.stickyHeaderScrolling();\n      }\n    };\n\n    this.handleHover = row => () => {\n      this.setState({\n        rowHovered: row\n      });\n    };\n\n    this.handleFocus = event => {\n      var _this$state$columnVis2;\n\n      const fixedFirstColumns = this.fixedFirstColumns();\n\n      if (this.scrollContainer.current == null || event.target == null) {\n        return;\n      }\n\n      const currentCell = event.target.parentNode;\n      const fixedNthColumn = this.props;\n      const nthColumnWidth = fixedNthColumn ? (_this$state$columnVis2 = this.state.columnVisibilityData[fixedFirstColumns]) === null || _this$state$columnVis2 === void 0 ? void 0 : _this$state$columnVis2.rightEdge : 0;\n      const currentColumnLeftEdge = currentCell.offsetLeft;\n      const desiredScrollLeft = currentColumnLeftEdge - nthColumnWidth;\n\n      if (this.scrollContainer.current.scrollLeft > desiredScrollLeft) {\n        this.scrollContainer.current.scrollLeft = desiredScrollLeft;\n      } // focus fixed first column if present\n\n    };\n\n    this.navigateTable = direction => {\n      var _this$state$columnVis3;\n\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        currentColumn,\n        previousColumn\n      } = this.state;\n      const nthColumnWidth = (_this$state$columnVis3 = this.state.columnVisibilityData[fixedFirstColumns - 1]) === null || _this$state$columnVis3 === void 0 ? void 0 : _this$state$columnVis3.rightEdge;\n\n      if (!currentColumn || !previousColumn) {\n        return;\n      }\n\n      let prevWidths = 0;\n\n      for (let index = 0; index < currentColumn.index; index++) {\n        prevWidths += this.state.columnVisibilityData[index].width;\n      }\n\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n\n      const handleScroll = () => {\n        let newScrollLeft = 0;\n\n        if (fixedFirstColumns) {\n          newScrollLeft = direction === 'right' ? prevWidths - nthColumnWidth + currentColumn.width : prevWidths - previousColumn.width - nthColumnWidth;\n        } else {\n          newScrollLeft = direction === 'right' ? currentColumn.rightEdge : previousColumn.leftEdge;\n        }\n\n        if (scrollContainer) {\n          scrollContainer.scrollLeft = newScrollLeft;\n          requestAnimationFrame(() => {\n            this.setState(prevState => ({ ...this.calculateColumnVisibilityData(prevState.condensed)\n            }));\n          });\n        }\n      };\n\n      return handleScroll;\n    };\n\n    this.renderHeading = _ref2 => {\n      let {\n        heading,\n        headingIndex,\n        inFixedNthColumn,\n        inStickyHeader\n      } = _ref2;\n      const {\n        sortable,\n        truncate = false,\n        columnContentTypes,\n        defaultSortDirection,\n        initialSortColumnIndex = 0,\n        verticalAlign,\n        firstColumnMinWidth\n      } = this.props;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex,\n        isScrolledFarthestLeft\n      } = this.state;\n      let sortableHeadingProps;\n      const headingCellId = `heading-cell-${headingIndex}`;\n      const stickyHeaderId = `stickyheader-${headingIndex}`;\n      const id = inStickyHeader ? stickyHeaderId : headingCellId;\n\n      if (sortable) {\n        const isSortable = sortable[headingIndex];\n        const isSorted = isSortable && sortedColumnIndex === headingIndex;\n        const direction = isSorted ? sortDirection : 'none';\n        sortableHeadingProps = {\n          defaultSortDirection,\n          sorted: isSorted,\n          sortable: isSortable,\n          sortDirection: direction,\n          onSort: this.defaultOnSort(headingIndex),\n          fixedNthColumn: fixedFirstColumns,\n          inFixedNthColumn: fixedFirstColumns\n        };\n      }\n\n      const stickyCellWidth = inStickyHeader ? this.tableHeadingWidths[headingIndex] : undefined;\n      const fixedCellVisible = !isScrolledFarthestLeft;\n      const cellProps = {\n        header: true,\n        stickyHeadingCell: inStickyHeader,\n        content: heading,\n        contentType: columnContentTypes[headingIndex],\n        nthColumn: headingIndex < fixedFirstColumns,\n        fixedFirstColumns,\n        truncate,\n        headingIndex,\n        ...sortableHeadingProps,\n        verticalAlign,\n        handleFocus: this.handleFocus,\n        stickyCellWidth,\n        fixedCellVisible,\n        firstColumnMinWidth\n      };\n\n      if (inFixedNthColumn && inStickyHeader) {\n        var _this$state$columnVis4; // need two cells for fixed first column (actual cell and the overlapping one)\n        // the sticky cell is second so that the index is associated with the sticky\n        // cell and not the underlying one. This helps `changeHeadingFocus` to put\n        // focus on the right cell when switching from sticky to non-sticky headers\n\n\n        return [/*#__PURE__*/React.createElement(Cell, Object.assign({\n          key: id\n        }, cellProps, {\n          setRef: ref => {\n            this.setCellRef({\n              ref,\n              index: headingIndex,\n              inStickyHeader\n            });\n          },\n          inFixedNthColumn: false\n        })), /*#__PURE__*/React.createElement(Cell, Object.assign({\n          key: `${id}-sticky`\n        }, cellProps, {\n          setRef: ref => {\n            this.setCellRef({\n              ref,\n              index: headingIndex,\n              inStickyHeader\n            });\n          },\n          inFixedNthColumn: Boolean(fixedFirstColumns),\n          lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,\n          style: {\n            left: (_this$state$columnVis4 = this.state.columnVisibilityData[headingIndex]) === null || _this$state$columnVis4 === void 0 ? void 0 : _this$state$columnVis4.leftEdge\n          }\n        }))];\n      }\n\n      return /*#__PURE__*/React.createElement(Cell, Object.assign({\n        key: id\n      }, cellProps, {\n        setRef: ref => {\n          this.setCellRef({\n            ref,\n            index: headingIndex,\n            inStickyHeader\n          });\n        },\n        lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,\n        inFixedNthColumn: inFixedNthColumn\n      }));\n    };\n\n    this.totalsRowHeading = () => {\n      const {\n        i18n,\n        totals,\n        totalsName\n      } = this.props;\n      const totalsLabel = totalsName ? totalsName : {\n        singular: i18n.translate('Polaris.DataTable.totalRowHeading'),\n        plural: i18n.translate('Polaris.DataTable.totalsRowHeading')\n      };\n      return totals && totals.filter(total => total !== '').length > 1 ? totalsLabel.plural : totalsLabel.singular;\n    };\n\n    this.renderTotals = _ref3 => {\n      let {\n        total,\n        index\n      } = _ref3;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const id = `totals-cell-${index}`;\n      const {\n        truncate = false,\n        verticalAlign\n      } = this.props;\n      let content;\n      let contentType;\n\n      if (index === 0) {\n        content = this.totalsRowHeading();\n      }\n\n      if (total !== '' && index > 0) {\n        contentType = 'numeric';\n        content = total;\n      }\n\n      const totalInFooter = this.props.showTotalsInFooter;\n      return /*#__PURE__*/React.createElement(Cell, {\n        total: true,\n        totalInFooter: totalInFooter,\n        nthColumn: index <= fixedFirstColumns - 1,\n        firstColumn: index === 0,\n        key: id,\n        content: content,\n        contentType: contentType,\n        truncate: truncate,\n        verticalAlign: verticalAlign\n      });\n    };\n\n    this.getColSpan = (rowLength, headingsLength, contentTypesLength, cellIndex) => {\n      // We decided that it shouldn't be possible to have fixed \"n\" columns and content that spans multiple columns\n      const fixedFirstColumns = this.fixedFirstColumns();\n\n      if (fixedFirstColumns) {\n        return 1;\n      }\n\n      const rowLen = rowLength ? rowLength : 1;\n      const colLen = headingsLength ? headingsLength : contentTypesLength;\n      const colSpan = Math.floor(colLen / rowLen);\n      const remainder = colLen % rowLen;\n      return cellIndex === 0 ? colSpan + remainder : colSpan;\n    };\n\n    this.defaultRenderRow = _ref4 => {\n      let {\n        row,\n        index,\n        inFixedNthColumn,\n        rowHeights\n      } = _ref4;\n      const {\n        columnContentTypes,\n        truncate = false,\n        verticalAlign,\n        hoverable = true,\n        headings\n      } = this.props;\n      const {\n        condensed\n      } = this.state;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const className = classNames(styles.TableRow, hoverable && styles.hoverable);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: `row-${index}`,\n        className: className,\n        onMouseEnter: this.handleHover(index),\n        onMouseLeave: this.handleHover()\n      }, row.map((content, cellIndex) => {\n        const hovered = index === this.state.rowHovered;\n        const id = `cell-${cellIndex}-row-${index}`;\n        const colSpan = this.getColSpan(row.length, headings.length, columnContentTypes.length, cellIndex);\n        return /*#__PURE__*/React.createElement(Cell, {\n          key: id,\n          content: content,\n          contentType: columnContentTypes[cellIndex],\n          nthColumn: cellIndex <= fixedFirstColumns - 1,\n          firstColumn: cellIndex === 0,\n          truncate: truncate,\n          verticalAlign: verticalAlign,\n          colSpan: colSpan,\n          hovered: hovered,\n          style: rowHeights ? {\n            height: `${rowHeights[index]}px`\n          } : {},\n          inFixedNthColumn: condensed && inFixedNthColumn\n        });\n      }));\n    };\n\n    this.defaultOnSort = headingIndex => {\n      const {\n        onSort,\n        defaultSortDirection = 'ascending',\n        initialSortColumnIndex\n      } = this.props;\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex\n      } = this.state;\n      let newSortDirection = defaultSortDirection;\n\n      if (sortedColumnIndex === headingIndex) {\n        newSortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';\n      }\n\n      const handleSort = () => {\n        this.setState({\n          sortDirection: newSortDirection,\n          sortedColumnIndex: headingIndex\n        }, () => {\n          if (onSort) {\n            onSort(headingIndex, newSortDirection);\n          }\n        });\n      };\n\n      return handleSort;\n    };\n  }\n\n  componentDidMount() {\n    // We need to defer the calculation in development so the styles have time to be injected.\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        this.handleResize();\n      }, 10);\n    } else {\n      this.handleResize();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (isEqual(prevProps, this.props)) {\n      return;\n    }\n\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    this.handleResize.cancel();\n  }\n\n  render() {\n    var _this$table$current, _this$table$current2, _columnVisibilityData;\n\n    const {\n      headings,\n      totals,\n      showTotalsInFooter,\n      rows,\n      footerContent,\n      hideScrollIndicator = false,\n      increasedTableDensity = false,\n      hasZebraStripingOnData = false,\n      stickyHeader = false,\n      hasFixedFirstColumn: fixedFirstColumn = false\n    } = this.props;\n    const {\n      condensed,\n      columnVisibilityData,\n      isScrolledFarthestLeft,\n      isScrolledFarthestRight\n    } = this.state;\n\n    if (fixedFirstColumn && process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn('Deprecation: The `hasFixedFirstColumn` prop on the `DataTable` has been deprecated. Use fixedFirstColumns={n} instead.');\n    }\n\n    const fixedFirstColumns = this.fixedFirstColumns();\n    const rowCountIsEven = rows.length % 2 === 0;\n    const className = classNames(styles.DataTable, condensed && styles.condensed, totals && styles.ShowTotals, showTotalsInFooter && styles.ShowTotalsInFooter, hasZebraStripingOnData && styles.ZebraStripingOnData, hasZebraStripingOnData && rowCountIsEven && styles.RowCountIsEven);\n    const wrapperClassName = classNames(styles.TableWrapper, condensed && styles.condensed, increasedTableDensity && styles.IncreasedTableDensity, stickyHeader && styles.StickyHeaderEnabled);\n    const headingMarkup = /*#__PURE__*/React.createElement(\"tr\", null, headings.map((heading, index) => this.renderHeading({\n      heading,\n      headingIndex: index,\n      inFixedNthColumn: false,\n      inStickyHeader: false\n    })));\n    const totalsMarkup = totals ? /*#__PURE__*/React.createElement(\"tr\", null, totals.map((total, index) => this.renderTotals({\n      total,\n      index\n    }))) : null;\n    const nthColumns = rows.map(row => row.slice(0, fixedFirstColumns));\n    const nthHeadings = headings.slice(0, fixedFirstColumns);\n    const nthTotals = totals === null || totals === void 0 ? void 0 : totals.slice(0, fixedFirstColumns);\n    const tableHeaderRows = (_this$table$current = this.table.current) === null || _this$table$current === void 0 ? void 0 : _this$table$current.children[0].childNodes;\n    const tableBodyRows = (_this$table$current2 = this.table.current) === null || _this$table$current2 === void 0 ? void 0 : _this$table$current2.children[1].childNodes;\n    const headerRowHeights = getRowClientHeights(tableHeaderRows);\n    const bodyRowHeights = getRowClientHeights(tableBodyRows);\n    const fixedNthColumnMarkup = condensed && fixedFirstColumns !== 0 && /*#__PURE__*/React.createElement(\"table\", {\n      className: classNames(styles.FixedFirstColumn, !isScrolledFarthestLeft && styles.separate),\n      style: {\n        width: `${(_columnVisibilityData = columnVisibilityData[fixedFirstColumns - 1]) === null || _columnVisibilityData === void 0 ? void 0 : _columnVisibilityData.rightEdge}px`\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        height: `${headerRowHeights[0]}px`\n      }\n    }, nthHeadings.map((heading, index) => this.renderHeading({\n      heading,\n      headingIndex: index,\n      inFixedNthColumn: true,\n      inStickyHeader: false\n    }))), totals && !showTotalsInFooter && /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        height: `${headerRowHeights[1]}px`\n      }\n    }, nthTotals === null || nthTotals === void 0 ? void 0 : nthTotals.map((total, index) => this.renderTotals({\n      total,\n      index\n    })))), /*#__PURE__*/React.createElement(\"tbody\", null, nthColumns.map((row, index) => this.defaultRenderRow({\n      row,\n      index,\n      inFixedNthColumn: true,\n      rowHeights: bodyRowHeights\n    }))), totals && showTotalsInFooter && /*#__PURE__*/React.createElement(\"tfoot\", null, /*#__PURE__*/React.createElement(\"tr\", null, nthTotals === null || nthTotals === void 0 ? void 0 : nthTotals.map((total, index) => this.renderTotals({\n      total,\n      index\n    })))));\n    const bodyMarkup = rows.map((row, index) => this.defaultRenderRow({\n      row,\n      index,\n      inFixedNthColumn: false\n    }));\n    const footerMarkup = footerContent ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Footer\n    }, footerContent) : null;\n    const headerTotalsMarkup = !showTotalsInFooter ? totalsMarkup : null;\n    const footerTotalsMarkup = showTotalsInFooter ? /*#__PURE__*/React.createElement(\"tfoot\", null, totalsMarkup) : null;\n\n    const navigationMarkup = location => hideScrollIndicator ? null : /*#__PURE__*/React.createElement(Navigation, {\n      columnVisibilityData: columnVisibilityData,\n      isScrolledFarthestLeft: isScrolledFarthestLeft,\n      isScrolledFarthestRight: isScrolledFarthestRight,\n      navigateTableLeft: this.navigateTable('left'),\n      navigateTableRight: this.navigateTable('right'),\n      fixedFirstColumns: fixedFirstColumns,\n      setRef: ref => {\n        if (location === 'header') {\n          this.headerNav = ref;\n        } else if (location === 'sticky') {\n          this.stickyNav = ref;\n        }\n      }\n    });\n\n    const stickyHeaderMarkup = stickyHeader ? /*#__PURE__*/React.createElement(AfterInitialMount, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyHeaderWrapper,\n      role: \"presentation\"\n    }, /*#__PURE__*/React.createElement(Sticky, {\n      boundingElement: this.dataTable.current,\n      onStickyChange: isSticky => {\n        this.changeHeadingFocus();\n        this.stickyHeaderActive = isSticky;\n      }\n    }, isSticky => {\n      const stickyHeaderInnerClassNames = classNames(styles.StickyHeaderInner, isSticky && styles['StickyHeaderInner-isSticky']);\n      const stickyHeaderTableClassNames = classNames(styles.StickyHeaderTable, !isScrolledFarthestLeft && styles.separate);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: stickyHeaderInnerClassNames\n      }, /*#__PURE__*/React.createElement(\"div\", null, navigationMarkup('sticky')), /*#__PURE__*/React.createElement(\"table\", {\n        className: stickyHeaderTableClassNames,\n        ref: this.stickyTable\n      }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n        className: styles.StickyTableHeadingsRow\n      }, headings.map((heading, index) => {\n        return this.renderHeading({\n          heading,\n          headingIndex: index,\n          inFixedNthColumn: Boolean(index <= fixedFirstColumns - 1 && fixedFirstColumns),\n          inStickyHeader: true\n        });\n      })))));\n    }))) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: wrapperClassName,\n      ref: this.dataTable\n    }, stickyHeaderMarkup, navigationMarkup('header'), /*#__PURE__*/React.createElement(\"div\", {\n      className: className\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ScrollContainer,\n      ref: this.scrollContainer\n    }, /*#__PURE__*/React.createElement(EventListener, {\n      event: \"resize\",\n      handler: this.handleResize\n    }), /*#__PURE__*/React.createElement(EventListener, {\n      capture: true,\n      passive: true,\n      event: \"scroll\",\n      handler: this.scrollListener\n    }), fixedNthColumnMarkup, /*#__PURE__*/React.createElement(\"table\", {\n      className: styles.Table,\n      ref: this.table\n    }, /*#__PURE__*/React.createElement(\"thead\", null, headingMarkup, headerTotalsMarkup), /*#__PURE__*/React.createElement(\"tbody\", null, bodyMarkup), footerTotalsMarkup)), footerMarkup));\n  }\n\n  fixedFirstColumns() {\n    const {\n      hasFixedFirstColumn,\n      fixedFirstColumns = 0,\n      headings\n    } = this.props;\n    const numberOfFixedFirstColumns = hasFixedFirstColumn && !fixedFirstColumns ? 1 : fixedFirstColumns;\n\n    if (numberOfFixedFirstColumns >= headings.length) {\n      return 0;\n    }\n\n    return numberOfFixedFirstColumns;\n  }\n\n}\n\nfunction DataTable(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React.createElement(DataTableInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { DataTable };","map":{"version":3,"names":["React","PureComponent","createRef","isEqual","debounce","classNames","headerCell","measureColumn","getPrevAndCurrentColumns","styles","Cell","AfterInitialMount","Sticky","Navigation","useI18n","EventListener","getRowClientHeights","rows","heights","forEach","row","push","clientHeight","DataTableInner","constructor","state","condensed","columnVisibilityData","isScrolledFarthestLeft","isScrolledFarthestRight","rowHovered","undefined","dataTable","scrollContainer","table","stickyTable","stickyNav","headerNav","tableHeadings","stickyHeadings","tableHeadingWidths","stickyHeaderActive","scrollStopTimer","handleResize","current","scrollWidth","clientWidth","setState","calculateColumnVisibilityData","setCellRef","ref","index","inStickyHeader","button","querySelector","addEventListener","handleHeaderButtonFocus","changeHeadingFocus","stickyFocusedItemIndex","findIndex","item","_document$activeEleme","document","activeElement","parentElement","tableFocusedItemIndex","_document$activeEleme2","arrowsInStickyNav","querySelectorAll","arrowsInHeaderNav","stickyFocusedNavIndex","headerFocusedNavIndex","style","visibility","focus","removeProperty","fixedFirstColumns","stickyHeader","props","headerCells","selector","rightMostHeader","nthColumnWidth","offsetLeft","offsetWidth","length","firstVisibleColumnIndex","tableLeftVisibleEdge","scrollLeft","tableRightVisibleEdge","tableData","map","lastColumn","rightEdge","previousColumn","currentColumn","event","_this$state$columnVis","target","currentCell","parentNode","tableScrollLeft","tableViewableWidth","tableRightEdge","currentColumnLeftEdge","currentColumnRightEdge","stickyHeaderScrolling","scrollListener","_this$scrollContainer","clearTimeout","setTimeout","prevState","handleHover","handleFocus","_this$state$columnVis2","fixedNthColumn","desiredScrollLeft","navigateTable","direction","_this$state$columnVis3","prevWidths","width","handleScroll","newScrollLeft","leftEdge","requestAnimationFrame","renderHeading","heading","headingIndex","inFixedNthColumn","sortable","truncate","columnContentTypes","defaultSortDirection","initialSortColumnIndex","verticalAlign","firstColumnMinWidth","sortDirection","sortedColumnIndex","sortableHeadingProps","headingCellId","stickyHeaderId","id","isSortable","isSorted","sorted","onSort","defaultOnSort","stickyCellWidth","fixedCellVisible","cellProps","header","stickyHeadingCell","content","contentType","nthColumn","_this$state$columnVis4","createElement","Object","assign","key","setRef","Boolean","lastFixedFirstColumn","left","totalsRowHeading","i18n","totals","totalsName","totalsLabel","singular","translate","plural","filter","total","renderTotals","totalInFooter","showTotalsInFooter","firstColumn","getColSpan","rowLength","headingsLength","contentTypesLength","cellIndex","rowLen","colLen","colSpan","Math","floor","remainder","defaultRenderRow","rowHeights","hoverable","headings","className","TableRow","onMouseEnter","onMouseLeave","hovered","height","newSortDirection","handleSort","componentDidMount","process","env","NODE_ENV","componentDidUpdate","prevProps","componentWillUnmount","cancel","render","_this$table$current","_this$table$current2","_columnVisibilityData","footerContent","hideScrollIndicator","increasedTableDensity","hasZebraStripingOnData","hasFixedFirstColumn","fixedFirstColumn","console","warn","rowCountIsEven","DataTable","ShowTotals","ShowTotalsInFooter","ZebraStripingOnData","RowCountIsEven","wrapperClassName","TableWrapper","IncreasedTableDensity","StickyHeaderEnabled","headingMarkup","totalsMarkup","nthColumns","slice","nthHeadings","nthTotals","tableHeaderRows","children","childNodes","tableBodyRows","headerRowHeights","bodyRowHeights","fixedNthColumnMarkup","FixedFirstColumn","separate","bodyMarkup","footerMarkup","Footer","headerTotalsMarkup","footerTotalsMarkup","navigationMarkup","location","navigateTableLeft","navigateTableRight","stickyHeaderMarkup","StickyHeaderWrapper","role","boundingElement","onStickyChange","isSticky","stickyHeaderInnerClassNames","StickyHeaderInner","stickyHeaderTableClassNames","StickyHeaderTable","StickyTableHeadingsRow","ScrollContainer","handler","capture","passive","Table","numberOfFixedFirstColumns"],"sources":["/home/cedcoss/react/After interview/polarisdashoboard/node_modules/@shopify/polaris/build/esm/components/DataTable/DataTable.js"],"sourcesContent":["import React, { PureComponent, createRef } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { debounce } from '../../utilities/debounce.js';\nimport { classNames } from '../../utilities/css.js';\nimport { headerCell } from '../shared.js';\nimport { measureColumn, getPrevAndCurrentColumns } from './utilities.js';\nimport styles from './DataTable.scss.js';\nimport { Cell } from './components/Cell/Cell.js';\nimport { AfterInitialMount } from '../AfterInitialMount/AfterInitialMount.js';\nimport { Sticky } from '../Sticky/Sticky.js';\nimport { Navigation } from './components/Navigation/Navigation.js';\nimport { useI18n } from '../../utilities/i18n/hooks.js';\nimport { EventListener } from '../EventListener/EventListener.js';\n\nconst getRowClientHeights = rows => {\n  const heights = [];\n\n  if (!rows) {\n    return heights;\n  }\n\n  rows.forEach(row => {\n    heights.push(row.clientHeight);\n  });\n  return heights;\n};\n\nclass DataTableInner extends PureComponent {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      condensed: false,\n      columnVisibilityData: [],\n      isScrolledFarthestLeft: true,\n      isScrolledFarthestRight: false,\n      rowHovered: undefined\n    };\n    this.dataTable = /*#__PURE__*/createRef();\n    this.scrollContainer = /*#__PURE__*/createRef();\n    this.table = /*#__PURE__*/createRef();\n    this.stickyTable = /*#__PURE__*/createRef();\n    this.stickyNav = null;\n    this.headerNav = null;\n    this.tableHeadings = [];\n    this.stickyHeadings = [];\n    this.tableHeadingWidths = [];\n    this.stickyHeaderActive = false;\n    this.scrollStopTimer = null;\n    this.handleResize = debounce(() => {\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        }\n      } = this;\n      let condensed = false;\n\n      if (table && scrollContainer) {\n        // safari sometimes incorrectly sets the scrollwidth too large by 1px\n        condensed = table.scrollWidth > scrollContainer.clientWidth + 1;\n      }\n\n      this.setState({\n        condensed,\n        ...this.calculateColumnVisibilityData(condensed)\n      });\n    });\n\n    this.setCellRef = ({\n      ref,\n      index,\n      inStickyHeader\n    }) => {\n      if (ref == null) {\n        return;\n      }\n\n      if (inStickyHeader) {\n        this.stickyHeadings[index] = ref;\n        const button = ref.querySelector('button');\n\n        if (button == null) {\n          return;\n        }\n\n        button.addEventListener('focus', this.handleHeaderButtonFocus);\n      } else {\n        this.tableHeadings[index] = ref;\n        this.tableHeadingWidths[index] = ref.clientWidth;\n      }\n    };\n\n    this.changeHeadingFocus = () => {\n      const {\n        tableHeadings,\n        stickyHeadings,\n        stickyNav,\n        headerNav\n      } = this;\n      const stickyFocusedItemIndex = stickyHeadings.findIndex(item => {\n        var _document$activeEleme;\n\n        return item === ((_document$activeEleme = document.activeElement) === null || _document$activeEleme === void 0 ? void 0 : _document$activeEleme.parentElement);\n      });\n      const tableFocusedItemIndex = tableHeadings.findIndex(item => {\n        var _document$activeEleme2;\n\n        return item === ((_document$activeEleme2 = document.activeElement) === null || _document$activeEleme2 === void 0 ? void 0 : _document$activeEleme2.parentElement);\n      });\n      const arrowsInStickyNav = stickyNav === null || stickyNav === void 0 ? void 0 : stickyNav.querySelectorAll('button');\n      const arrowsInHeaderNav = headerNav === null || headerNav === void 0 ? void 0 : headerNav.querySelectorAll('button');\n      let stickyFocusedNavIndex = -1;\n      arrowsInStickyNav === null || arrowsInStickyNav === void 0 ? void 0 : arrowsInStickyNav.forEach((item, index) => {\n        if (item === document.activeElement) {\n          stickyFocusedNavIndex = index;\n        }\n      });\n      let headerFocusedNavIndex = -1;\n      arrowsInHeaderNav === null || arrowsInHeaderNav === void 0 ? void 0 : arrowsInHeaderNav.forEach((item, index) => {\n        if (item === document.activeElement) {\n          headerFocusedNavIndex = index;\n        }\n      });\n\n      if (stickyFocusedItemIndex < 0 && tableFocusedItemIndex < 0 && stickyFocusedNavIndex < 0 && headerFocusedNavIndex < 0) {\n        return null;\n      }\n\n      let button;\n\n      if (stickyFocusedItemIndex >= 0) {\n        button = tableHeadings[stickyFocusedItemIndex].querySelector('button');\n      } else if (tableFocusedItemIndex >= 0) {\n        button = stickyHeadings[tableFocusedItemIndex].querySelector('button');\n      }\n\n      if (stickyFocusedNavIndex >= 0) {\n        button = arrowsInHeaderNav === null || arrowsInHeaderNav === void 0 ? void 0 : arrowsInHeaderNav[stickyFocusedNavIndex];\n      } else if (headerFocusedNavIndex >= 0) {\n        button = arrowsInStickyNav === null || arrowsInStickyNav === void 0 ? void 0 : arrowsInStickyNav[headerFocusedNavIndex];\n      }\n\n      if (button == null) {\n        return null;\n      }\n\n      button.style.visibility = 'visible';\n      button.focus();\n      button.style.removeProperty('visibility');\n    };\n\n    this.calculateColumnVisibilityData = condensed => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        table: {\n          current: table\n        },\n        scrollContainer: {\n          current: scrollContainer\n        },\n        dataTable: {\n          current: dataTable\n        }\n      } = this;\n      const {\n        stickyHeader\n      } = this.props;\n\n      if ((stickyHeader || condensed) && table && scrollContainer && dataTable) {\n        const headerCells = table.querySelectorAll(headerCell.selector);\n        const rightMostHeader = headerCells[fixedFirstColumns - 1];\n        const nthColumnWidth = fixedFirstColumns ? rightMostHeader.offsetLeft + rightMostHeader.offsetWidth : 0;\n\n        if (headerCells.length > 0) {\n          const firstVisibleColumnIndex = headerCells.length - 1;\n          const tableLeftVisibleEdge = scrollContainer.scrollLeft + nthColumnWidth;\n          const tableRightVisibleEdge = scrollContainer.scrollLeft + dataTable.offsetWidth;\n          const tableData = {\n            firstVisibleColumnIndex,\n            tableLeftVisibleEdge,\n            tableRightVisibleEdge\n          };\n          const columnVisibilityData = [...headerCells].map(measureColumn(tableData));\n          const lastColumn = columnVisibilityData[columnVisibilityData.length - 1];\n          const isScrolledFarthestLeft = fixedFirstColumns ? tableLeftVisibleEdge === nthColumnWidth : tableLeftVisibleEdge === 0;\n          return {\n            columnVisibilityData,\n            ...getPrevAndCurrentColumns(tableData, columnVisibilityData),\n            isScrolledFarthestLeft,\n            isScrolledFarthestRight: lastColumn.rightEdge <= tableRightVisibleEdge\n          };\n        }\n      }\n\n      return {\n        columnVisibilityData: [],\n        previousColumn: undefined,\n        currentColumn: undefined\n      };\n    };\n\n    this.handleHeaderButtonFocus = event => {\n      var _this$state$columnVis;\n\n      const fixedFirstColumns = this.fixedFirstColumns();\n\n      if (this.scrollContainer.current == null || event.target == null || this.state.columnVisibilityData.length === 0) {\n        return;\n      }\n\n      const target = event.target;\n      const currentCell = target.parentNode;\n      const tableScrollLeft = this.scrollContainer.current.scrollLeft;\n      const tableViewableWidth = this.scrollContainer.current.offsetWidth;\n      const tableRightEdge = tableScrollLeft + tableViewableWidth;\n      const nthColumnWidth = this.state.columnVisibilityData.length > 0 ? (_this$state$columnVis = this.state.columnVisibilityData[fixedFirstColumns]) === null || _this$state$columnVis === void 0 ? void 0 : _this$state$columnVis.rightEdge : 0;\n      const currentColumnLeftEdge = currentCell.offsetLeft;\n      const currentColumnRightEdge = currentCell.offsetLeft + currentCell.offsetWidth;\n\n      if (tableScrollLeft > currentColumnLeftEdge - nthColumnWidth) {\n        this.scrollContainer.current.scrollLeft = currentColumnLeftEdge - nthColumnWidth;\n      }\n\n      if (currentColumnRightEdge > tableRightEdge) {\n        this.scrollContainer.current.scrollLeft = currentColumnRightEdge - tableViewableWidth;\n      }\n    };\n\n    this.stickyHeaderScrolling = () => {\n      const {\n        current: stickyTable\n      } = this.stickyTable;\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n\n      if (stickyTable == null || scrollContainer == null) {\n        return;\n      }\n\n      stickyTable.scrollLeft = scrollContainer.scrollLeft;\n    };\n\n    this.scrollListener = () => {\n      var _this$scrollContainer;\n\n      if (this.scrollStopTimer) {\n        clearTimeout(this.scrollStopTimer);\n      }\n\n      this.scrollStopTimer = setTimeout(() => {\n        this.setState(prevState => ({ ...this.calculateColumnVisibilityData(prevState.condensed)\n        }));\n      }, 100);\n      this.setState({\n        isScrolledFarthestLeft: ((_this$scrollContainer = this.scrollContainer.current) === null || _this$scrollContainer === void 0 ? void 0 : _this$scrollContainer.scrollLeft) === 0\n      });\n\n      if (this.props.stickyHeader && this.stickyHeaderActive) {\n        this.stickyHeaderScrolling();\n      }\n    };\n\n    this.handleHover = row => () => {\n      this.setState({\n        rowHovered: row\n      });\n    };\n\n    this.handleFocus = event => {\n      var _this$state$columnVis2;\n\n      const fixedFirstColumns = this.fixedFirstColumns();\n\n      if (this.scrollContainer.current == null || event.target == null) {\n        return;\n      }\n\n      const currentCell = event.target.parentNode;\n      const fixedNthColumn = this.props;\n      const nthColumnWidth = fixedNthColumn ? (_this$state$columnVis2 = this.state.columnVisibilityData[fixedFirstColumns]) === null || _this$state$columnVis2 === void 0 ? void 0 : _this$state$columnVis2.rightEdge : 0;\n      const currentColumnLeftEdge = currentCell.offsetLeft;\n      const desiredScrollLeft = currentColumnLeftEdge - nthColumnWidth;\n\n      if (this.scrollContainer.current.scrollLeft > desiredScrollLeft) {\n        this.scrollContainer.current.scrollLeft = desiredScrollLeft;\n      } // focus fixed first column if present\n\n    };\n\n    this.navigateTable = direction => {\n      var _this$state$columnVis3;\n\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        currentColumn,\n        previousColumn\n      } = this.state;\n      const nthColumnWidth = (_this$state$columnVis3 = this.state.columnVisibilityData[fixedFirstColumns - 1]) === null || _this$state$columnVis3 === void 0 ? void 0 : _this$state$columnVis3.rightEdge;\n\n      if (!currentColumn || !previousColumn) {\n        return;\n      }\n\n      let prevWidths = 0;\n\n      for (let index = 0; index < currentColumn.index; index++) {\n        prevWidths += this.state.columnVisibilityData[index].width;\n      }\n\n      const {\n        current: scrollContainer\n      } = this.scrollContainer;\n\n      const handleScroll = () => {\n        let newScrollLeft = 0;\n\n        if (fixedFirstColumns) {\n          newScrollLeft = direction === 'right' ? prevWidths - nthColumnWidth + currentColumn.width : prevWidths - previousColumn.width - nthColumnWidth;\n        } else {\n          newScrollLeft = direction === 'right' ? currentColumn.rightEdge : previousColumn.leftEdge;\n        }\n\n        if (scrollContainer) {\n          scrollContainer.scrollLeft = newScrollLeft;\n          requestAnimationFrame(() => {\n            this.setState(prevState => ({ ...this.calculateColumnVisibilityData(prevState.condensed)\n            }));\n          });\n        }\n      };\n\n      return handleScroll;\n    };\n\n    this.renderHeading = ({\n      heading,\n      headingIndex,\n      inFixedNthColumn,\n      inStickyHeader\n    }) => {\n      const {\n        sortable,\n        truncate = false,\n        columnContentTypes,\n        defaultSortDirection,\n        initialSortColumnIndex = 0,\n        verticalAlign,\n        firstColumnMinWidth\n      } = this.props;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex,\n        isScrolledFarthestLeft\n      } = this.state;\n      let sortableHeadingProps;\n      const headingCellId = `heading-cell-${headingIndex}`;\n      const stickyHeaderId = `stickyheader-${headingIndex}`;\n      const id = inStickyHeader ? stickyHeaderId : headingCellId;\n\n      if (sortable) {\n        const isSortable = sortable[headingIndex];\n        const isSorted = isSortable && sortedColumnIndex === headingIndex;\n        const direction = isSorted ? sortDirection : 'none';\n        sortableHeadingProps = {\n          defaultSortDirection,\n          sorted: isSorted,\n          sortable: isSortable,\n          sortDirection: direction,\n          onSort: this.defaultOnSort(headingIndex),\n          fixedNthColumn: fixedFirstColumns,\n          inFixedNthColumn: fixedFirstColumns\n        };\n      }\n\n      const stickyCellWidth = inStickyHeader ? this.tableHeadingWidths[headingIndex] : undefined;\n      const fixedCellVisible = !isScrolledFarthestLeft;\n      const cellProps = {\n        header: true,\n        stickyHeadingCell: inStickyHeader,\n        content: heading,\n        contentType: columnContentTypes[headingIndex],\n        nthColumn: headingIndex < fixedFirstColumns,\n        fixedFirstColumns,\n        truncate,\n        headingIndex,\n        ...sortableHeadingProps,\n        verticalAlign,\n        handleFocus: this.handleFocus,\n        stickyCellWidth,\n        fixedCellVisible,\n        firstColumnMinWidth\n      };\n\n      if (inFixedNthColumn && inStickyHeader) {\n        var _this$state$columnVis4;\n\n        // need two cells for fixed first column (actual cell and the overlapping one)\n        // the sticky cell is second so that the index is associated with the sticky\n        // cell and not the underlying one. This helps `changeHeadingFocus` to put\n        // focus on the right cell when switching from sticky to non-sticky headers\n        return [/*#__PURE__*/React.createElement(Cell, Object.assign({\n          key: id\n        }, cellProps, {\n          setRef: ref => {\n            this.setCellRef({\n              ref,\n              index: headingIndex,\n              inStickyHeader\n            });\n          },\n          inFixedNthColumn: false\n        })), /*#__PURE__*/React.createElement(Cell, Object.assign({\n          key: `${id}-sticky`\n        }, cellProps, {\n          setRef: ref => {\n            this.setCellRef({\n              ref,\n              index: headingIndex,\n              inStickyHeader\n            });\n          },\n          inFixedNthColumn: Boolean(fixedFirstColumns),\n          lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,\n          style: {\n            left: (_this$state$columnVis4 = this.state.columnVisibilityData[headingIndex]) === null || _this$state$columnVis4 === void 0 ? void 0 : _this$state$columnVis4.leftEdge\n          }\n        }))];\n      }\n\n      return /*#__PURE__*/React.createElement(Cell, Object.assign({\n        key: id\n      }, cellProps, {\n        setRef: ref => {\n          this.setCellRef({\n            ref,\n            index: headingIndex,\n            inStickyHeader\n          });\n        },\n        lastFixedFirstColumn: headingIndex === fixedFirstColumns - 1,\n        inFixedNthColumn: inFixedNthColumn\n      }));\n    };\n\n    this.totalsRowHeading = () => {\n      const {\n        i18n,\n        totals,\n        totalsName\n      } = this.props;\n      const totalsLabel = totalsName ? totalsName : {\n        singular: i18n.translate('Polaris.DataTable.totalRowHeading'),\n        plural: i18n.translate('Polaris.DataTable.totalsRowHeading')\n      };\n      return totals && totals.filter(total => total !== '').length > 1 ? totalsLabel.plural : totalsLabel.singular;\n    };\n\n    this.renderTotals = ({\n      total,\n      index\n    }) => {\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const id = `totals-cell-${index}`;\n      const {\n        truncate = false,\n        verticalAlign\n      } = this.props;\n      let content;\n      let contentType;\n\n      if (index === 0) {\n        content = this.totalsRowHeading();\n      }\n\n      if (total !== '' && index > 0) {\n        contentType = 'numeric';\n        content = total;\n      }\n\n      const totalInFooter = this.props.showTotalsInFooter;\n      return /*#__PURE__*/React.createElement(Cell, {\n        total: true,\n        totalInFooter: totalInFooter,\n        nthColumn: index <= fixedFirstColumns - 1,\n        firstColumn: index === 0,\n        key: id,\n        content: content,\n        contentType: contentType,\n        truncate: truncate,\n        verticalAlign: verticalAlign\n      });\n    };\n\n    this.getColSpan = (rowLength, headingsLength, contentTypesLength, cellIndex) => {\n      // We decided that it shouldn't be possible to have fixed \"n\" columns and content that spans multiple columns\n      const fixedFirstColumns = this.fixedFirstColumns();\n\n      if (fixedFirstColumns) {\n        return 1;\n      }\n\n      const rowLen = rowLength ? rowLength : 1;\n      const colLen = headingsLength ? headingsLength : contentTypesLength;\n      const colSpan = Math.floor(colLen / rowLen);\n      const remainder = colLen % rowLen;\n      return cellIndex === 0 ? colSpan + remainder : colSpan;\n    };\n\n    this.defaultRenderRow = ({\n      row,\n      index,\n      inFixedNthColumn,\n      rowHeights\n    }) => {\n      const {\n        columnContentTypes,\n        truncate = false,\n        verticalAlign,\n        hoverable = true,\n        headings\n      } = this.props;\n      const {\n        condensed\n      } = this.state;\n      const fixedFirstColumns = this.fixedFirstColumns();\n      const className = classNames(styles.TableRow, hoverable && styles.hoverable);\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: `row-${index}`,\n        className: className,\n        onMouseEnter: this.handleHover(index),\n        onMouseLeave: this.handleHover()\n      }, row.map((content, cellIndex) => {\n        const hovered = index === this.state.rowHovered;\n        const id = `cell-${cellIndex}-row-${index}`;\n        const colSpan = this.getColSpan(row.length, headings.length, columnContentTypes.length, cellIndex);\n        return /*#__PURE__*/React.createElement(Cell, {\n          key: id,\n          content: content,\n          contentType: columnContentTypes[cellIndex],\n          nthColumn: cellIndex <= fixedFirstColumns - 1,\n          firstColumn: cellIndex === 0,\n          truncate: truncate,\n          verticalAlign: verticalAlign,\n          colSpan: colSpan,\n          hovered: hovered,\n          style: rowHeights ? {\n            height: `${rowHeights[index]}px`\n          } : {},\n          inFixedNthColumn: condensed && inFixedNthColumn\n        });\n      }));\n    };\n\n    this.defaultOnSort = headingIndex => {\n      const {\n        onSort,\n        defaultSortDirection = 'ascending',\n        initialSortColumnIndex\n      } = this.props;\n      const {\n        sortDirection = defaultSortDirection,\n        sortedColumnIndex = initialSortColumnIndex\n      } = this.state;\n      let newSortDirection = defaultSortDirection;\n\n      if (sortedColumnIndex === headingIndex) {\n        newSortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';\n      }\n\n      const handleSort = () => {\n        this.setState({\n          sortDirection: newSortDirection,\n          sortedColumnIndex: headingIndex\n        }, () => {\n          if (onSort) {\n            onSort(headingIndex, newSortDirection);\n          }\n        });\n      };\n\n      return handleSort;\n    };\n  }\n\n  componentDidMount() {\n    // We need to defer the calculation in development so the styles have time to be injected.\n    if (process.env.NODE_ENV === 'development') {\n      setTimeout(() => {\n        this.handleResize();\n      }, 10);\n    } else {\n      this.handleResize();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (isEqual(prevProps, this.props)) {\n      return;\n    }\n\n    this.handleResize();\n  }\n\n  componentWillUnmount() {\n    this.handleResize.cancel();\n  }\n\n  render() {\n    var _this$table$current, _this$table$current2, _columnVisibilityData;\n\n    const {\n      headings,\n      totals,\n      showTotalsInFooter,\n      rows,\n      footerContent,\n      hideScrollIndicator = false,\n      increasedTableDensity = false,\n      hasZebraStripingOnData = false,\n      stickyHeader = false,\n      hasFixedFirstColumn: fixedFirstColumn = false\n    } = this.props;\n    const {\n      condensed,\n      columnVisibilityData,\n      isScrolledFarthestLeft,\n      isScrolledFarthestRight\n    } = this.state;\n\n    if (fixedFirstColumn && process.env.NODE_ENV === 'development') {\n      // eslint-disable-next-line no-console\n      console.warn('Deprecation: The `hasFixedFirstColumn` prop on the `DataTable` has been deprecated. Use fixedFirstColumns={n} instead.');\n    }\n\n    const fixedFirstColumns = this.fixedFirstColumns();\n    const rowCountIsEven = rows.length % 2 === 0;\n    const className = classNames(styles.DataTable, condensed && styles.condensed, totals && styles.ShowTotals, showTotalsInFooter && styles.ShowTotalsInFooter, hasZebraStripingOnData && styles.ZebraStripingOnData, hasZebraStripingOnData && rowCountIsEven && styles.RowCountIsEven);\n    const wrapperClassName = classNames(styles.TableWrapper, condensed && styles.condensed, increasedTableDensity && styles.IncreasedTableDensity, stickyHeader && styles.StickyHeaderEnabled);\n    const headingMarkup = /*#__PURE__*/React.createElement(\"tr\", null, headings.map((heading, index) => this.renderHeading({\n      heading,\n      headingIndex: index,\n      inFixedNthColumn: false,\n      inStickyHeader: false\n    })));\n    const totalsMarkup = totals ? /*#__PURE__*/React.createElement(\"tr\", null, totals.map((total, index) => this.renderTotals({\n      total,\n      index\n    }))) : null;\n    const nthColumns = rows.map(row => row.slice(0, fixedFirstColumns));\n    const nthHeadings = headings.slice(0, fixedFirstColumns);\n    const nthTotals = totals === null || totals === void 0 ? void 0 : totals.slice(0, fixedFirstColumns);\n    const tableHeaderRows = (_this$table$current = this.table.current) === null || _this$table$current === void 0 ? void 0 : _this$table$current.children[0].childNodes;\n    const tableBodyRows = (_this$table$current2 = this.table.current) === null || _this$table$current2 === void 0 ? void 0 : _this$table$current2.children[1].childNodes;\n    const headerRowHeights = getRowClientHeights(tableHeaderRows);\n    const bodyRowHeights = getRowClientHeights(tableBodyRows);\n    const fixedNthColumnMarkup = condensed && fixedFirstColumns !== 0 && /*#__PURE__*/React.createElement(\"table\", {\n      className: classNames(styles.FixedFirstColumn, !isScrolledFarthestLeft && styles.separate),\n      style: {\n        width: `${(_columnVisibilityData = columnVisibilityData[fixedFirstColumns - 1]) === null || _columnVisibilityData === void 0 ? void 0 : _columnVisibilityData.rightEdge}px`\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        height: `${headerRowHeights[0]}px`\n      }\n    }, nthHeadings.map((heading, index) => this.renderHeading({\n      heading,\n      headingIndex: index,\n      inFixedNthColumn: true,\n      inStickyHeader: false\n    }))), totals && !showTotalsInFooter && /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        height: `${headerRowHeights[1]}px`\n      }\n    }, nthTotals === null || nthTotals === void 0 ? void 0 : nthTotals.map((total, index) => this.renderTotals({\n      total,\n      index\n    })))), /*#__PURE__*/React.createElement(\"tbody\", null, nthColumns.map((row, index) => this.defaultRenderRow({\n      row,\n      index,\n      inFixedNthColumn: true,\n      rowHeights: bodyRowHeights\n    }))), totals && showTotalsInFooter && /*#__PURE__*/React.createElement(\"tfoot\", null, /*#__PURE__*/React.createElement(\"tr\", null, nthTotals === null || nthTotals === void 0 ? void 0 : nthTotals.map((total, index) => this.renderTotals({\n      total,\n      index\n    })))));\n    const bodyMarkup = rows.map((row, index) => this.defaultRenderRow({\n      row,\n      index,\n      inFixedNthColumn: false\n    }));\n    const footerMarkup = footerContent ? /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.Footer\n    }, footerContent) : null;\n    const headerTotalsMarkup = !showTotalsInFooter ? totalsMarkup : null;\n    const footerTotalsMarkup = showTotalsInFooter ? /*#__PURE__*/React.createElement(\"tfoot\", null, totalsMarkup) : null;\n\n    const navigationMarkup = location => hideScrollIndicator ? null : /*#__PURE__*/React.createElement(Navigation, {\n      columnVisibilityData: columnVisibilityData,\n      isScrolledFarthestLeft: isScrolledFarthestLeft,\n      isScrolledFarthestRight: isScrolledFarthestRight,\n      navigateTableLeft: this.navigateTable('left'),\n      navigateTableRight: this.navigateTable('right'),\n      fixedFirstColumns: fixedFirstColumns,\n      setRef: ref => {\n        if (location === 'header') {\n          this.headerNav = ref;\n        } else if (location === 'sticky') {\n          this.stickyNav = ref;\n        }\n      }\n    });\n\n    const stickyHeaderMarkup = stickyHeader ? /*#__PURE__*/React.createElement(AfterInitialMount, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.StickyHeaderWrapper,\n      role: \"presentation\"\n    }, /*#__PURE__*/React.createElement(Sticky, {\n      boundingElement: this.dataTable.current,\n      onStickyChange: isSticky => {\n        this.changeHeadingFocus();\n        this.stickyHeaderActive = isSticky;\n      }\n    }, isSticky => {\n      const stickyHeaderInnerClassNames = classNames(styles.StickyHeaderInner, isSticky && styles['StickyHeaderInner-isSticky']);\n      const stickyHeaderTableClassNames = classNames(styles.StickyHeaderTable, !isScrolledFarthestLeft && styles.separate);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: stickyHeaderInnerClassNames\n      }, /*#__PURE__*/React.createElement(\"div\", null, navigationMarkup('sticky')), /*#__PURE__*/React.createElement(\"table\", {\n        className: stickyHeaderTableClassNames,\n        ref: this.stickyTable\n      }, /*#__PURE__*/React.createElement(\"thead\", null, /*#__PURE__*/React.createElement(\"tr\", {\n        className: styles.StickyTableHeadingsRow\n      }, headings.map((heading, index) => {\n        return this.renderHeading({\n          heading,\n          headingIndex: index,\n          inFixedNthColumn: Boolean(index <= fixedFirstColumns - 1 && fixedFirstColumns),\n          inStickyHeader: true\n        });\n      })))));\n    }))) : null;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: wrapperClassName,\n      ref: this.dataTable\n    }, stickyHeaderMarkup, navigationMarkup('header'), /*#__PURE__*/React.createElement(\"div\", {\n      className: className\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.ScrollContainer,\n      ref: this.scrollContainer\n    }, /*#__PURE__*/React.createElement(EventListener, {\n      event: \"resize\",\n      handler: this.handleResize\n    }), /*#__PURE__*/React.createElement(EventListener, {\n      capture: true,\n      passive: true,\n      event: \"scroll\",\n      handler: this.scrollListener\n    }), fixedNthColumnMarkup, /*#__PURE__*/React.createElement(\"table\", {\n      className: styles.Table,\n      ref: this.table\n    }, /*#__PURE__*/React.createElement(\"thead\", null, headingMarkup, headerTotalsMarkup), /*#__PURE__*/React.createElement(\"tbody\", null, bodyMarkup), footerTotalsMarkup)), footerMarkup));\n  }\n\n  fixedFirstColumns() {\n    const {\n      hasFixedFirstColumn,\n      fixedFirstColumns = 0,\n      headings\n    } = this.props;\n    const numberOfFixedFirstColumns = hasFixedFirstColumn && !fixedFirstColumns ? 1 : fixedFirstColumns;\n\n    if (numberOfFixedFirstColumns >= headings.length) {\n      return 0;\n    }\n\n    return numberOfFixedFirstColumns;\n  }\n\n}\n\nfunction DataTable(props) {\n  const i18n = useI18n();\n  return /*#__PURE__*/React.createElement(DataTableInner, Object.assign({}, props, {\n    i18n: i18n\n  }));\n}\n\nexport { DataTable };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}